;
; test move instructions

; 0. constants used
    .word   -1       ; make `short` not zero
short:

	.globl	long

zero	= . - short
fixed	= 100


; 1. test each addression mode for each general move

	move.l	d0, a1
	move.w	a1, a2@
	move.b	a2@, a3@+
	move.l	a3@+, a4@-
	move.w	a4@-, a5@(123)
	move.b	a5@(12), d0@(20)
	move.l	a1@(d2, 3), short   ; writable .text
	move.w	short, long
	move.l	long, short
	move.b	long, #fixed
	move.l	#fixed, d2
	move.w	#zero, d3
	move.b	pc@, d4
    move.l  pc@(d1, +123), d5
    move.l  pc@(d1, -123), d5

; 2. test special (moveq), etc

	move.l	#123, d0
	move.w	#123, d1
	move.l	#123, a2
	move.w 	#123, a3

    move.l  #-100, d4
    move.w  #-100, d5
    move.b  #-100, d6


	moveq.l	#-100, d4
	moveq.l	#-200, d4
	move.l	#200, d5

	move.l	#0, d6
	move.w	#0, a7

	move.w	sr, a0
	move.w	sr, d1
	move.w	a2@, sr
	move.w	ccr, d2
	move.w	a3@, ccr

	move.l	a2, usp
	move.l	usp, a3
	move.l	usp, d2

; 4. movep

	movep.l	d0,a2@
	movep.w	d1,a2@(123)
	movep.l	a3@, d2
	movep.w a3@(123), d3

; 5. movec/moves

	movec	dfc, d2
	movec a1, vbr

	moves.b	d1,a2@+
	moves.b	a1,a2@+
	moves.w	a3@-,d2
	moves.l d0@,a3
	moves.l d3,d4

; 3. movem

	movem.l	#456, a2@-
	movem.w	d0-d2/a0-a2/a6/a7, a2@-
	movem.l 	fp@+, d0-d2/a0-a2/a6/a7
	movem.l d1,a3@-
	movem.w a0/usp,a2@
	movem.w	d0-d2/a0-a2/a6/a7, long

	movem.l sp@+, #456
	movem.w	long, d0-d2/a0-a2/a6/a7

; 4. move16
    move16  a2@+, a4@+
    move16  long, a3@+
    move16  sp@, long


;	bra	short
