in :  #NO_APP[\n]
out:  ERROR	[kas::parser::kas_diag: 1 loc: #NO_APP
]

in :  .file[\t]"gen_llist.c"[\n]
out:  DW_FILE	{[EXPR = "gen_llist.c": src = ""gen_llist.c""]}

in :  .text[\n]
out:  SEG	{.text}, {[MISSING: src = ""]}

in :  .Ltext0:
out:  LABEL	[sym: 1 loc: c1]

in :  .cfi_sections[\t].debug_frame[\n]
out:  CFI_SECTIONS	{[EXPR = [.debug_frame(index: 2)]: src = ".debug_frame"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]gen_llist[\n]
out:  SYM	{1}, {[EXPR = [gen_llist(index: 3)]: src = "gen_llist"]}

in :  .type[\t]gen_llist, @function[\n]
out:  TYPE	{[EXPR = [gen_llist(index: 3)]: src = "gen_llist"], [@IDENT: src = "@function"]}

in :  gen_llist:
out:  LABEL	[sym: 3 loc: c6]

in :  .LFB0:
out:  LABEL	[sym: 4 loc: cc]

in :  .file 1 "gen_llist.c"[\n]
out:  DW_FILE	{[EXPR = 1: src = "1"], [EXPR = "gen_llist.c": src = ""gen_llist.c""]}

in :  .loc 1 36 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 24: src = "36"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 1 37 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 25: src = "37"], [EXPR = 0: src = "0"]}

in :  jra .L2[\n]
out:  jra	{}

in :  .L3:
out:  LABEL	[sym: 6 loc: d7]

in :  .loc 1 38 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 26: src = "38"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  add.l 16(%fp),%d0[\n]
out:  addl	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.l %d0,(%a0)[\n]
out:  movel	{}

in :  .loc 1 39 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 27: src = "39"], [EXPR = 0: src = "0"]}

in :  move.l 16(%fp),%d0[\n]
out:  movel	{}

in :  add.l %d0,8(%fp)[\n]
out:  addl	{}

in :  .L2:
out:  LABEL	[sym: 5 loc: d5]

in :  .loc 1 37 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 25: src = "37"], [EXPR = 0: src = "0"]}

in :  subq.l #1,12(%fp)[\n]
out:  subql	{}

in :  tst.l 12(%fp)[\n]
out:  tstl	{}

in :  jne .L3[\n]
out:  jne	{}

in :  .loc 1 41 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 29: src = "41"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  clr.l (%a0)[\n]
out:  clrl	{}

in :  .loc 1 42 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 2a: src = "42"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE0:
out:  LABEL	[sym: 7 loc: f0]

in :  .size[\t]gen_llist, .-gen_llist[\n]
out:  SIZE	{[EXPR = [gen_llist(index: 3)]: src = "gen_llist"], [EXPR = cx[1](0+ca([dot])-[ident 2:gen_llist]): src = ".-gen_llist"]}

in :  .Letext0:
out:  LABEL	[sym: 8 loc: f7]

in :  .file 2 "types.h"[\n]
out:  DW_FILE	{[EXPR = 2: src = "2"], [EXPR = "types.h": src = ""types.h""]}

in :  .section[\t].debug_info,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_info(index: 9)]: src = ".debug_info"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_info0:
out:  LABEL	[sym: a loc: fc]

in :  .long[\t]0x8f[\n]
out:  INT<4>	{[EXPR = 8f: src = "0x8f"]}

in :  .word[\t]0x4[\n]
out:  INT<2>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t].Ldebug_abbrev0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_abbrev0(index: b)]: src = ".Ldebug_abbrev0"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .long[\t].LASF5[\n]
out:  INT<4>	{[EXPR = [.LASF5(index: c)]: src = ".LASF5"]}

in :  .byte[\t]0xc[\n]
out:  INT<1>	{[EXPR = c: src = "0xc"]}

in :  .long[\t].LASF6[\n]
out:  INT<4>	{[EXPR = [.LASF6(index: d)]: src = ".LASF6"]}

in :  .long[\t].LASF7[\n]
out:  INT<4>	{[EXPR = [.LASF7(index: e)]: src = ".LASF7"]}

in :  .long[\t].Ltext0[\n]
out:  INT<4>	{[EXPR = [.Ltext0(index: 1)]: src = ".Ltext0"]}

in :  .long[\t].Letext0-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[2](0+[ident 7:.Letext0]-[ident 0:.Ltext0]): src = ".Letext0-.Ltext0"]}

in :  .long[\t].Ldebug_line0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_line0(index: f)]: src = ".Ldebug_line0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .long[\t].LASF8[\n]
out:  INT<4>	{[EXPR = [.LASF8(index: 10)]: src = ".LASF8"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x30[\n]
out:  INT<4>	{[EXPR = 30: src = "0x30"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF0[\n]
out:  INT<4>	{[EXPR = [.LASF0(index: 11)]: src = ".LASF0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF1[\n]
out:  INT<4>	{[EXPR = [.LASF1(index: 12)]: src = ".LASF1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x8[\n]
out:  INT<1>	{[EXPR = 8: src = "0x8"]}

in :  .long[\t].LASF2[\n]
out:  INT<4>	{[EXPR = [.LASF2(index: 13)]: src = ".LASF2"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF3[\n]
out:  INT<4>	{[EXPR = [.LASF3(index: 14)]: src = ".LASF3"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .long[\t].LASF4[\n]
out:  INT<4>	{[EXPR = [.LASF4(index: 15)]: src = ".LASF4"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .string[\t]"int"[\n]
out:  STR<1>	{[EXPR = "int": src = ""int""]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .long[\t].LASF9[\n]
out:  INT<4>	{[EXPR = [.LASF9(index: 16)]: src = ".LASF9"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t].LFB0[\n]
out:  INT<4>	{[EXPR = [.LFB0(index: 4)]: src = ".LFB0"]}

in :  .long[\t].LFE0-.LFB0[\n]
out:  INT<4>	{[EXPR = cx[3](0+[ident 6:.LFE0]-[ident 3:.LFB0]): src = ".LFE0-.LFB0"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x5a[\n]
out:  INT<4>	{[EXPR = 5a: src = "0x5a"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x53[\n]
out:  INT<4>	{[EXPR = 53: src = "0x53"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 4[\n]
out:  SLEB128	{[EXPR = 4: src = "4"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .string[\t]"s"[\n]
out:  STR<1>	{[EXPR = "s": src = ""s""]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x25[\n]
out:  INT<4>	{[EXPR = 25: src = "0x25"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 8[\n]
out:  SLEB128	{[EXPR = 8: src = "8"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_abbrev,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_abbrev(index: 17)]: src = ".debug_abbrev"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_abbrev0:
out:  LABEL	[sym: b loc: 100]

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x25[\n]
out:  ULEB128	{[EXPR = 25: src = "0x25"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x10[\n]
out:  ULEB128	{[EXPR = 10: src = "0x10"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3e[\n]
out:  ULEB128	{[EXPR = 3e: src = "0x3e"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3e[\n]
out:  ULEB128	{[EXPR = 3e: src = "0x3e"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2117[\n]
out:  ULEB128	{[EXPR = 2117: src = "0x2117"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_aranges,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_aranges(index: 18)]: src = ".debug_aranges"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .long[\t]0x1c[\n]
out:  INT<4>	{[EXPR = 1c: src = "0x1c"]}

in :  .word[\t]0x2[\n]
out:  INT<2>	{[EXPR = 2: src = "0x2"]}

in :  .long[\t].Ldebug_info0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_info0(index: a)]: src = ".Ldebug_info0"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .word[\t]0[\n]
out:  INT<2>	{[EXPR = 0: src = "0"]}

in :  .word[\t]0[\n]
out:  INT<2>	{[EXPR = 0: src = "0"]}

in :  .long[\t].Ltext0[\n]
out:  INT<4>	{[EXPR = [.Ltext0(index: 1)]: src = ".Ltext0"]}

in :  .long[\t].Letext0-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[4](0+[ident 7:.Letext0]-[ident 0:.Ltext0]): src = ".Letext0-.Ltext0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_line,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_line(index: 19)]: src = ".debug_line"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_line0:
out:  LABEL	[sym: f loc: 111]

in :  .section[\t].debug_str,"MS",@progbits,1[\n]
out:  SEG	{[EXPR = [.debug_str(index: 1a)]: src = ".debug_str"], [EXPR = "MS": src = ""MS""], [@IDENT: src = "@progbits"], [EXPR = 1: src = "1"]}

in :  .LASF8:
out:  LABEL	[sym: 10 loc: 114]

in :  .string[\t]"size_t"[\n]
out:  STR<1>	{[EXPR = "size_t": src = ""size_t""]}

in :  .LASF6:
out:  LABEL	[sym: d loc: 107]

in :  .string[\t]"gen_llist.c"[\n]
out:  STR<1>	{[EXPR = "gen_llist.c": src = ""gen_llist.c""]}

in :  .LASF7:
out:  LABEL	[sym: e loc: 109]

in :  .string[\t]"/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos"[\n]
out:  STR<1>	{[EXPR = "/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos": src = ""/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos""]}

in :  .LASF0:
out:  LABEL	[sym: 11 loc: 11c]

in :  .string[\t]"long unsigned int"[\n]
out:  STR<1>	{[EXPR = "long unsigned int": src = ""long unsigned int""]}

in :  .LASF2:
out:  LABEL	[sym: 13 loc: 126]

in :  .string[\t]"unsigned char"[\n]
out:  STR<1>	{[EXPR = "unsigned char": src = ""unsigned char""]}

in :  .LASF4:
out:  LABEL	[sym: 15 loc: 130]

in :  .string[\t]"char"[\n]
out:  STR<1>	{[EXPR = "char": src = ""char""]}

in :  .LASF9:
out:  LABEL	[sym: 16 loc: 139]

in :  .string[\t]"gen_llist"[\n]
out:  STR<1>	{[EXPR = "gen_llist": src = ""gen_llist""]}

in :  .LASF5:
out:  LABEL	[sym: c loc: 104]

in :  .string[\t]"GNU C11 5.4.0 -mcpu=68020 -g"[\n]
out:  STR<1>	{[EXPR = "GNU C11 5.4.0 -mcpu=68020 -g": src = ""GNU C11 5.4.0 -mcpu=68020 -g""]}

in :  .LASF3:
out:  LABEL	[sym: 14 loc: 12b]

in :  .string[\t]"short unsigned int"[\n]
out:  STR<1>	{[EXPR = "short unsigned int": src = ""short unsigned int""]}

in :  .LASF1:
out:  LABEL	[sym: 12 loc: 121]

in :  .string[\t]"unsigned int"[\n]
out:  STR<1>	{[EXPR = "unsigned int": src = ""unsigned int""]}

in :  .ident[\t]"GCC: (GNU) 5.4.0"[\n]
out:  IDENT	{[EXPR = "GCC: (GNU) 5.4.0": src = ""GCC: (GNU) 5.4.0""]}

in :  
out:  EOI	

symbols:
   0: .Ltext0             U : *undef*
   1: .debug_frame        T : *undef*
   2: gen_llist           U : *undef*
   3: .LFB0               U : *undef*
   4: .L2                 U : *undef*
   5: .L3                 U : *undef*
   6: .LFE0               U : *undef*
   7: .Letext0            U : *undef*
   8: .debug_info         T : *undef*
   9: .Ldebug_info0       T : *undef*
  10: .Ldebug_abbrev0     T : *undef*
  11: .LASF5              T : *undef*
  12: .LASF6              T : *undef*
  13: .LASF7              T : *undef*
  14: .Ldebug_line0       T : *undef*
  15: .LASF8              T : *undef*
  16: .LASF0              T : *undef*
  17: .LASF1              T : *undef*
  18: .LASF2              T : *undef*
  19: .LASF3              T : *undef*
  20: .LASF4              T : *undef*
  21: .LASF9              T : *undef*
  22: .debug_abbrev       T : *undef*
  23: .debug_aranges      T : *undef*
  24: .debug_line         T : *undef*
  25: .debug_str          T : *undef*

