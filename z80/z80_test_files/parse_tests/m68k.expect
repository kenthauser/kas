in :  move.l  #3,d2[\n]
out:  movel	{}

in :  nop[\n]
out:  nop	{}

in :  move.l  d0, a1[\n]
out:  movel	{}

in :  move.w  d0, a1[\n]
out:  movew	{}

in :  move.b  d0, a1[\n]
out:  moveb	{}

in :  move.l  d0, #3[\n]
out:  movel	{}

in :  move.l  d2, #d1[\n]
out:  movel	{}

in :  move.l  d2@, a2@+[\n]
out:  movel	{}

in :  move.w  d2@, a2@+[\n]
out:  movew	{}

in :  move.b  d2@, a2@+[\n]
out:  moveb	{}

in :  move.l  d3@-, a4@[\n]
out:  movel	{}

in :  move.l  a4@-,a1@(123)[\n]
out:  movel	{}

in :  move.l  d1, a2@(a3)[\n]
out:  movel	{}

in :  move.l  d2, a2@(a2:w)[\n]
out:  movel	{}

in :  move.l  d3, a3@(d3:4)[\n]
out:  movel	{}

in :  move.l  d4, a4@(d4:l:8)[\n]
out:  movel	{}

in :      move.l  d5, a6@(d5:8:l)[\n]
out:  ERROR	[kas::parser::kas_diag: 1 loc: :l)
]

in :  move.l  d6, a6@(d4, 123:4)[\n]
out:  movel	{}

in :  move.l  za0, d0[\n]
out:  movel	{}

in :  move.l  za0@, d2[\n]
out:  movel	{}

in :  move.l  pc@, d0[\n]
out:  movel	{}

in :  move.l  zpc@, d1[\n]
out:  movel	{}

in :  move.l  zpc@(0), d2[\n]
out:  movel	{}

in :  move.l  pc@(10), d1[\n]
out:  movel	{}

in :  move.l  zpc@(10), d2[\n]
out:  movel	{}

in :  move.l  a0, a1@(123, d1)@(234)[\n]
out:  movel	{}

in :  move.l  a1, a2@(d1)@(321)[\n]
out:  movel	{}

in :  move.l  a7, a2@(d1)@(0)[\n]
out:  movel	{}

in :      move.l  a5, a2@()[\n]
out:  ERROR	[kas::parser::kas_diag: 2 loc: )
]

in :      move.l  a6, a2@(d1)@()[\n]
out:  ERROR	[kas::parser::kas_diag: 3 loc: )
]

in :  move.l  a6, a2@(0)@(d1)[\n]
out:  movel	{}

in :  move.l  a2, a3@(123)@(234)[\n]
out:  movel	{}

in :  move.l  a3, a4@(123)@(d3)[\n]
out:  movel	{}

in :  move.l  a4, a5@(0)@(321,d4)[\n]
out:  movel	{}

in :  move.l  a2, a2@(d1)@(d2)[\n]
out:  movel	{}

in :  move.l  a7, a2@(0)@(0)[\n]
out:  movel	{}

in :  move.l  a7, a2@(1)@(2)@(3)[\n]
out:  movel	{}

in :  move.l  a7, a2@(0)@(0)@(d0)[\n]
out:  movel	{}

in :  exg d1, d2[\n]
out:  exg	{}

in :  exg a3, a4[\n]
out:  exg	{}

in :  exg a5, d6[\n]
out:  exg	{}

in :  exg d7, a0[\n]
out:  exg	{}

in :  movep.l d3,a4@(123)[\n]
out:  movepl	{}

in :  movep.w a2@,d6[\n]
out:  movepw	{}

in :  add.l   #4, d4[\n]
out:  addl	{}

in :  add.w   a2@, d1[\n]
out:  addw	{}

in :  add.l   #4, a2[\n]
out:  addl	{}

in :  adda.w  #4, a2[\n]
out:  addaw	{}

in :  st  a2@[\n]
out:  st	{}

in :  sne d2@[\n]
out:  sne	{}

in :  neg.l   d0[\n]
out:  negl	{}

in :  not.l   d2@(10)[\n]
out:  notl	{}

in :  m_first:
out:  LABEL	[sym: 1 loc: 261]

in :  neg.l   d0, d1[\n]
out:  negl	{}

in :  neg.w   d1[\n]
out:  negw	{}

in :  neg.l   a1[\n]
out:  negl	{}

in :  neg.l   a2@+[\n]
out:  negl	{}

in :  neg.l   a3@(d0)[\n]
out:  negl	{}

in :  neg.l   a4@(10)[\n]
out:  negl	{}

in :  move.l  #3,d2[\n]
out:  movel	{}

in :  move.w  #3,d2[\n]
out:  movew	{}

in :  move.b  #3,d2[\n]
out:  moveb	{}

in :  m_second:
out:  LABEL	[sym: 2 loc: 26c]

in :  move.l  #.-m_second, d4[\n]
out:  movel	{}

in :  move.w  #.-m_second, d4[\n]
out:  movew	{}

in :  move.b  #.-m_second, d4[\n]
out:  moveb	{}

in :  .skip   8[\n]
out:  SKIP	{[EXPR = 8: src = "8"]}

in :  move.l  #m_last-m_first, d3[\n]
out:  movel	{}

in :  m_third:
out:  LABEL	[sym: 4 loc: 27f]

in :  divs.l  a2@(d0),d1[\n]
out:  divsl	{}

in :  divs.l  a2@(d0),d1:d1[\n]
out:  divsl	{}

in :  divs.l  a2@(d0),d3:d4[\n]
out:  divsl	{}

in :  divsl.l a2@(d1),d5:d5[\n]
out:  divsll	{}

in :  divsl.l a2@(d1),d5:d6[\n]
out:  divsll	{}

in :      bfffo   a2@, {#3, d2}, d4[\n]
out:  ERROR	[kas::parser::kas_diag: 4 loc: ]

in :  
out:  EOI	

in :  
out:  EOI	

symbols:
   0: m_first             U : *undef*
   1: m_second            U : *undef*
   2: m_last              U : *undef*
   3: m_third             T : *undef*

