in :  .file[\t]"putchar.c"[\n]
out:  DW_FILE	{[EXPR = "putchar.c": src = ""putchar.c""]}

in :  .text[\n]
out:  SEG	{.text}, {[MISSING: src = ""]}

in :  .Ltext0:
out:  LABEL	[sym: 1 loc: 2f3]

in :  .cfi_sections[\t].debug_frame[\n]
out:  CFI_SECTIONS	{[EXPR = [.debug_frame(index: 2)]: src = ".debug_frame"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .type[\t]chk, @function[\n]
out:  TYPE	{[EXPR = [chk(index: 3)]: src = "chk"], [@IDENT: src = "@function"]}

in :  chk:
out:  LABEL	[sym: 3 loc: 2f8]

in :  .LFB0:
out:  LABEL	[sym: 4 loc: 2fc]

in :  .file 1 "chk.h"[\n]
out:  DW_FILE	{[EXPR = 1: src = "1"], [EXPR = "chk.h": src = ""chk.h""]}

in :  .loc 1 32 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 20: src = "32"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 8(%fp),%d1[\n]
out:  movel	{}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d1,-2(%fp)[\n]
out:  movew	{}

in :  move.w %d0,-4(%fp)[\n]
out:  movew	{}

in :  .loc 1 33 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 21: src = "33"], [EXPR = 0: src = "0"]}

in :  move.w -2(%fp),%d0[\n]
out:  movew	{}

in :  chkw -4(%fp), %d0[\n]
out:  chkw	{}

in :  .loc 1 34 0[\n]
out:  DW_LINE	{[EXPR = 1: src = "1"], [EXPR = 22: src = "34"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE0:
out:  LABEL	[sym: 5 loc: 310]

in :  .size[\t]chk, .-chk[\n]
out:  SIZE	{[EXPR = [chk(index: 3)]: src = "chk"], [EXPR = cx[1](0+ca([dot])-[ident 2:chk]): src = ".-chk"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .type[\t]abort, STT_FUNC[\n]
out:  TYPE	{[EXPR = [abort(index: 6)]: src = "abort"], [EXPR = [STT_FUNC(index: 7)]: src = "STT_FUNC"]}

in :  abort:
out:  LABEL	[sym: 6 loc: 318]

in :  .LFB2:
out:  LABEL	[sym: 8 loc: 31d]

in :  .file 2 "traps.h"[\n]
out:  DW_FILE	{[EXPR = 2: src = "2"], [EXPR = "traps.h": src = ""traps.h""]}

in :  .loc 2 55 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 37: src = "55"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 2 56 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 38: src = "56"], [EXPR = 0: src = "0"]}

in :  | 56 "traps.h" 1[\n]
out:  ERROR	[kas::parser::kas_diag: 1 loc: |]

in :  illegal[\n]
out:  illegal	{}

in :  | 0 "" 2[\n]
out:  ERROR	[kas::parser::kas_diag: 2 loc: |]

in :  .loc 2 57 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 39: src = "57"], [EXPR = 0: src = "0"]}

in :  jsr __no_return[\n]
out:  jsr	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE2:
out:  LABEL	[sym: a loc: 32f]

in :  .size[\t]abort, .-abort[\n]
out:  SIZE	{[EXPR = [abort(index: 6)]: src = "abort"], [EXPR = cx[2](0+ca([dot])-[ident 5:abort]): src = ".-abort"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .type[\t]queue, @function[\n]
out:  TYPE	{[EXPR = [queue(index: b)]: src = "queue"], [@IDENT: src = "@function"]}

in :  queue:
out:  LABEL	[sym: b loc: 337]

in :  .LFB5:
out:  LABEL	[sym: c loc: 33b]

in :  .loc 2 87 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 57: src = "87"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l %d3,-(%sp)[\n]
out:  movel	{}

in :  move.l %d2,-(%sp)[\n]
out:  movel	{}

in :  .cfi_offset 3, -12[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = 3: src = "3"], [EXPR = fffffff4: src = "-12"]}

in :  .cfi_offset 2, -16[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = 2: src = "2"], [EXPR = fffffff0: src = "-16"]}

in :  .loc 2 91 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 5b: src = "91"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  .loc 2 92 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 5c: src = "92"], [EXPR = 0: src = "0"]}

in :  move.l 12(%fp),%d1[\n]
out:  movel	{}

in :  .loc 2 94 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 5e: src = "94"], [EXPR = 0: src = "0"]}

in :  move.l %d0,%a0[\n]
out:  movel	{}

in :  tst.l %a0[\n]
out:  tstl	{}

in :  jeq .L4[\n]
out:  jeq	{}

in :  .loc 2 94 0 is_stmt 0 discriminator 1[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 5e: src = "94"], [EXPR = 0: src = "0"], [EXPR = [is_stmt(index: e)]: src = "is_stmt"], [EXPR = 0: src = "0"], [EXPR = [discriminator(index: f)]: src = "discriminator"], [EXPR = 1: src = "1"]}

in :  move.l %d0,%a0[\n]
out:  movel	{}

in :  move.l %a0,%d2[\n]
out:  movel	{}

in :  moveq #1,%d3[\n]
out:  moveq	{}

in :  and.l %d3,%d2[\n]
out:  andl	{}

in :  tst.l %d2[\n]
out:  tstl	{}

in :  jeq .L5[\n]
out:  jeq	{}

in :  .L4:
out:  LABEL	[sym: d loc: 34d]

in :  .loc 2 95 0 is_stmt 1[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 5f: src = "95"], [EXPR = 0: src = "0"], [EXPR = [is_stmt(index: e)]: src = "is_stmt"], [EXPR = 1: src = "1"]}

in :  jsr abort[\n]
out:  jsr	{}

in :  .L5:
out:  LABEL	[sym: 10 loc: 357]

in :  .loc 2 97 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 61: src = "97"], [EXPR = 0: src = "0"]}

in :  | 97 "traps.h" 1[\n]
out:  ERROR	[kas::parser::kas_diag: 3 loc: |]

in :  trap #2[\n]
out:  trap	{}

in :  | 0 "" 2[\n]
out:  ERROR	[kas::parser::kas_diag: 4 loc: |]

in :  .loc 2 99 0[\n]
out:  DW_LINE	{[EXPR = 2: src = "2"], [EXPR = 63: src = "99"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  move.l -8(%fp),%d2[\n]
out:  movel	{}

in :  move.l -4(%fp),%d3[\n]
out:  movel	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE5:
out:  LABEL	[sym: 11 loc: 36e]

in :  .size[\t]queue, .-queue[\n]
out:  SIZE	{[EXPR = [queue(index: b)]: src = "queue"], [EXPR = cx[3](0+ca([dot])-[ident a:queue]): src = ".-queue"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_free[\n]
out:  SYM	{1}, {[EXPR = [mb_free(index: 12)]: src = "mb_free"]}

in :  .type[\t]mb_free, @function[\n]
out:  TYPE	{[EXPR = [mb_free(index: 12)]: src = "mb_free"], [@IDENT: src = "@function"]}

in :  mb_free:
out:  LABEL	[sym: 12 loc: 376]

in :  .LFB7:
out:  LABEL	[sym: 13 loc: 37c]

in :  .file 3 "mbuf.h"[\n]
out:  DW_FILE	{[EXPR = 3: src = "3"], [EXPR = "mbuf.h": src = ""mbuf.h""]}

in :  .loc 3 140 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8c: src = "140"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 140 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8c: src = "140"], [EXPR = 0: src = "0"]}

in :  tst.l 8(%fp)[\n]
out:  tstl	{}

in :  jeq .L7[\n]
out:  jeq	{}

in :  .loc 3 140 0 is_stmt 0 discriminator 1[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8c: src = "140"], [EXPR = 0: src = "0"], [EXPR = [is_stmt(index: e)]: src = "is_stmt"], [EXPR = 0: src = "0"], [EXPR = [discriminator(index: f)]: src = "discriminator"], [EXPR = 1: src = "1"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b 7(%a0),%d0[\n]
out:  moveb	{}

in :  subq.b #1,%d0[\n]
out:  subqb	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b %d0,7(%a0)[\n]
out:  moveb	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b 7(%a0),%d0[\n]
out:  moveb	{}

in :  tst.b %d0[\n]
out:  tstb	{}

in :  jne .L9[\n]
out:  jne	{}

in :  .L7:
out:  LABEL	[sym: 14 loc: 386]

in :  .loc 3 141 0 is_stmt 1[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8d: src = "141"], [EXPR = 0: src = "0"], [EXPR = [is_stmt(index: e)]: src = "is_stmt"], [EXPR = 1: src = "1"]}

in :  move.l 8(%fp),-(%sp)[\n]
out:  movel	{}

in :  jsr _mb_unlink[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  .L9:
out:  LABEL	[sym: 15 loc: 393]

in :  .loc 3 140 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8c: src = "140"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE7:
out:  LABEL	[sym: 17 loc: 3a4]

in :  .size[\t]mb_free, .-mb_free[\n]
out:  SIZE	{[EXPR = [mb_free(index: 12)]: src = "mb_free"], [EXPR = cx[4](0+ca([dot])-[ident 11:mb_free]): src = ".-mb_free"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_link[\n]
out:  SYM	{1}, {[EXPR = [mb_link(index: 18)]: src = "mb_link"]}

in :  .type[\t]mb_link, @function[\n]
out:  TYPE	{[EXPR = [mb_link(index: 18)]: src = "mb_link"], [@IDENT: src = "@function"]}

in :  mb_link:
out:  LABEL	[sym: 18 loc: 3ac]

in :  .LFB8:
out:  LABEL	[sym: 19 loc: 3b2]

in :  .loc 3 142 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8e: src = "142"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 142 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8e: src = "142"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b 7(%a0),%d0[\n]
out:  moveb	{}

in :  addq.b #1,%d0[\n]
out:  addqb	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b %d0,7(%a0)[\n]
out:  moveb	{}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE8:
out:  LABEL	[sym: 1a loc: 3c3]

in :  .size[\t]mb_link, .-mb_link[\n]
out:  SIZE	{[EXPR = [mb_link(index: 18)]: src = "mb_link"], [EXPR = cx[5](0+ca([dot])-[ident 17:mb_link]): src = ".-mb_link"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_get_links[\n]
out:  SYM	{1}, {[EXPR = [mb_get_links(index: 1b)]: src = "mb_get_links"]}

in :  .type[\t]mb_get_links, @function[\n]
out:  TYPE	{[EXPR = [mb_get_links(index: 1b)]: src = "mb_get_links"], [@IDENT: src = "@function"]}

in :  mb_get_links:
out:  LABEL	[sym: 1b loc: 3cb]

in :  .LFB9:
out:  LABEL	[sym: 1c loc: 3d1]

in :  .loc 3 143 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8f: src = "143"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 143 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 8f: src = "143"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b 7(%a0),%d0[\n]
out:  moveb	{}

in :  move.b %d0,%d0[\n]
out:  moveb	{}

in :  and.l #255,%d0[\n]
out:  andl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE9:
out:  LABEL	[sym: 1d loc: 3e0]

in :  .size[\t]mb_get_links, .-mb_get_links[\n]
out:  SIZE	{[EXPR = [mb_get_links(index: 1b)]: src = "mb_get_links"], [EXPR = cx[6](0+ca([dot])-[ident 1a:mb_get_links]): src = ".-mb_get_links"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_empty[\n]
out:  SYM	{1}, {[EXPR = [mb_empty(index: 1e)]: src = "mb_empty"]}

in :  .type[\t]mb_empty, @function[\n]
out:  TYPE	{[EXPR = [mb_empty(index: 1e)]: src = "mb_empty"], [@IDENT: src = "@function"]}

in :  mb_empty:
out:  LABEL	[sym: 1e loc: 3e8]

in :  .LFB10:
out:  LABEL	[sym: 1f loc: 3ee]

in :  .loc 3 144 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 90: src = "144"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 144 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 90: src = "144"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d1[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  cmp.w %d1,%d0[\n]
out:  cmpw	{}

in :  seq %d0[\n]
out:  seq	{}

in :  neg.b %d0[\n]
out:  negb	{}

in :  move.b %d0,%d0[\n]
out:  moveb	{}

in :  and.l #255,%d0[\n]
out:  andl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE10:
out:  LABEL	[sym: 20 loc: 402]

in :  .size[\t]mb_empty, .-mb_empty[\n]
out:  SIZE	{[EXPR = [mb_empty(index: 1e)]: src = "mb_empty"], [EXPR = cx[7](0+ca([dot])-[ident 1d:mb_empty]): src = ".-mb_empty"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_len[\n]
out:  SYM	{1}, {[EXPR = [mb_len(index: 21)]: src = "mb_len"]}

in :  .type[\t]mb_len, @function[\n]
out:  TYPE	{[EXPR = [mb_len(index: 21)]: src = "mb_len"], [@IDENT: src = "@function"]}

in :  mb_len:
out:  LABEL	[sym: 21 loc: 40a]

in :  .LFB11:
out:  LABEL	[sym: 22 loc: 410]

in :  .loc 3 145 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 91: src = "145"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 145 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 91: src = "145"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%d1[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d1,%a0[\n]
out:  movew	{}

in :  sub.w %d0,%a0[\n]
out:  subw	{}

in :  move.w %a0,%d0[\n]
out:  movew	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE11:
out:  LABEL	[sym: 23 loc: 423]

in :  .size[\t]mb_len, .-mb_len[\n]
out:  SIZE	{[EXPR = [mb_len(index: 21)]: src = "mb_len"], [EXPR = cx[8](0+ca([dot])-[ident 20:mb_len]): src = ".-mb_len"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_room[\n]
out:  SYM	{1}, {[EXPR = [mb_room(index: 24)]: src = "mb_room"]}

in :  .type[\t]mb_room, @function[\n]
out:  TYPE	{[EXPR = [mb_room(index: 24)]: src = "mb_room"], [@IDENT: src = "@function"]}

in :  mb_room:
out:  LABEL	[sym: 24 loc: 42b]

in :  .LFB12:
out:  LABEL	[sym: 25 loc: 431]

in :  .loc 3 147 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 93: src = "147"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-2(%fp)[\n]
out:  movew	{}

in :  .loc 3 147 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 93: src = "147"], [EXPR = 0: src = "0"]}

in :  move.w -2(%fp),%a1[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  move.l %a1,%d0[\n]
out:  movel	{}

in :  add.l %a0,%d0[\n]
out:  addl	{}

in :  cmp.l #751,%d0[\n]
out:  cmpl	{}

in :  sls %d0[\n]
out:  sls	{}

in :  neg.b %d0[\n]
out:  negb	{}

in :  move.b %d0,%d0[\n]
out:  moveb	{}

in :  and.l #255,%d0[\n]
out:  andl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE12:
out:  LABEL	[sym: 26 loc: 449]

in :  .size[\t]mb_room, .-mb_room[\n]
out:  SIZE	{[EXPR = [mb_room(index: 24)]: src = "mb_room"], [EXPR = cx[9](0+ca([dot])-[ident 23:mb_room]): src = ".-mb_room"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_left[\n]
out:  SYM	{1}, {[EXPR = [mb_left(index: 27)]: src = "mb_left"]}

in :  .type[\t]mb_left, @function[\n]
out:  TYPE	{[EXPR = [mb_left(index: 27)]: src = "mb_left"], [@IDENT: src = "@function"]}

in :  mb_left:
out:  LABEL	[sym: 27 loc: 451]

in :  .LFB13:
out:  LABEL	[sym: 28 loc: 457]

in :  .loc 3 148 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 94: src = "148"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 148 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 94: src = "148"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  move.l #751,%d0[\n]
out:  movel	{}

in :  sub.l %a0,%d0[\n]
out:  subl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE13:
out:  LABEL	[sym: 29 loc: 467]

in :  .size[\t]mb_left, .-mb_left[\n]
out:  SIZE	{[EXPR = [mb_left(index: 27)]: src = "mb_left"], [EXPR = cx[a](0+ca([dot])-[ident 26:mb_left]): src = ".-mb_left"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_hroom[\n]
out:  SYM	{1}, {[EXPR = [mb_hroom(index: 2a)]: src = "mb_hroom"]}

in :  .type[\t]mb_hroom, @function[\n]
out:  TYPE	{[EXPR = [mb_hroom(index: 2a)]: src = "mb_hroom"], [@IDENT: src = "@function"]}

in :  mb_hroom:
out:  LABEL	[sym: 2a loc: 46f]

in :  .LFB14:
out:  LABEL	[sym: 2b loc: 475]

in :  .loc 3 150 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 96: src = "150"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-2(%fp)[\n]
out:  movew	{}

in :  .loc 3 150 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 96: src = "150"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  cmp.w -2(%fp),%d0[\n]
out:  cmpw	{}

in :  sge %d0[\n]
out:  sge	{}

in :  neg.b %d0[\n]
out:  negb	{}

in :  move.b %d0,%d0[\n]
out:  moveb	{}

in :  and.l #255,%d0[\n]
out:  andl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE14:
out:  LABEL	[sym: 2c loc: 489]

in :  .size[\t]mb_hroom, .-mb_hroom[\n]
out:  SIZE	{[EXPR = [mb_hroom(index: 2a)]: src = "mb_hroom"], [EXPR = cx[b](0+ca([dot])-[ident 29:mb_hroom]): src = ".-mb_hroom"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_top[\n]
out:  SYM	{1}, {[EXPR = [mb_top(index: 2d)]: src = "mb_top"]}

in :  .type[\t]mb_top, @function[\n]
out:  TYPE	{[EXPR = [mb_top(index: 2d)]: src = "mb_top"], [@IDENT: src = "@function"]}

in :  mb_top:
out:  LABEL	[sym: 2d loc: 491]

in :  .LFB15:
out:  LABEL	[sym: 2e loc: 497]

in :  .loc 3 151 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 97: src = "151"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 151 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 97: src = "151"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,4(%a0)[\n]
out:  movew	{}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE15:
out:  LABEL	[sym: 2f loc: 4a7]

in :  .size[\t]mb_top, .-mb_top[\n]
out:  SIZE	{[EXPR = [mb_top(index: 2d)]: src = "mb_top"], [EXPR = cx[c](0+ca([dot])-[ident 2c:mb_top]): src = ".-mb_top"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_hptr[\n]
out:  SYM	{1}, {[EXPR = [mb_hptr(index: 30)]: src = "mb_hptr"]}

in :  .type[\t]mb_hptr, @function[\n]
out:  TYPE	{[EXPR = [mb_hptr(index: 30)]: src = "mb_hptr"], [@IDENT: src = "@function"]}

in :  mb_hptr:
out:  LABEL	[sym: 30 loc: 4af]

in :  .LFB16:
out:  LABEL	[sym: 31 loc: 4b5]

in :  .loc 3 152 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 98: src = "152"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 152 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 98: src = "152"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  add.l %a0,%d0[\n]
out:  addl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE16:
out:  LABEL	[sym: 32 loc: 4c6]

in :  .size[\t]mb_hptr, .-mb_hptr[\n]
out:  SIZE	{[EXPR = [mb_hptr(index: 30)]: src = "mb_hptr"], [EXPR = cx[d](0+ca([dot])-[ident 2f:mb_hptr]): src = ".-mb_hptr"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_tptr[\n]
out:  SYM	{1}, {[EXPR = [mb_tptr(index: 33)]: src = "mb_tptr"]}

in :  .type[\t]mb_tptr, @function[\n]
out:  TYPE	{[EXPR = [mb_tptr(index: 33)]: src = "mb_tptr"], [@IDENT: src = "@function"]}

in :  mb_tptr:
out:  LABEL	[sym: 33 loc: 4ce]

in :  .LFB17:
out:  LABEL	[sym: 34 loc: 4d4]

in :  .loc 3 153 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 99: src = "153"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 3 153 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 99: src = "153"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  add.l %a0,%d0[\n]
out:  addl	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE17:
out:  LABEL	[sym: 35 loc: 4e5]

in :  .size[\t]mb_tptr, .-mb_tptr[\n]
out:  SIZE	{[EXPR = [mb_tptr(index: 33)]: src = "mb_tptr"], [EXPR = cx[e](0+ca([dot])-[ident 32:mb_tptr]): src = ".-mb_tptr"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_skip[\n]
out:  SYM	{1}, {[EXPR = [mb_skip(index: 36)]: src = "mb_skip"]}

in :  .type[\t]mb_skip, @function[\n]
out:  TYPE	{[EXPR = [mb_skip(index: 36)]: src = "mb_skip"], [@IDENT: src = "@function"]}

in :  mb_skip:
out:  LABEL	[sym: 36 loc: 4ed]

in :  .LFB18:
out:  LABEL	[sym: 37 loc: 4f3]

in :  .loc 3 154 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9a: src = "154"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-2(%fp)[\n]
out:  movew	{}

in :  .loc 3 154 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9a: src = "154"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%d1[\n]
out:  movew	{}

in :  move.w -2(%fp),%d0[\n]
out:  movew	{}

in :  add.w %d1,%d0[\n]
out:  addw	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE18:
out:  LABEL	[sym: 38 loc: 508]

in :  .size[\t]mb_skip, .-mb_skip[\n]
out:  SIZE	{[EXPR = [mb_skip(index: 36)]: src = "mb_skip"], [EXPR = cx[f](0+ca([dot])-[ident 35:mb_skip]): src = ".-mb_skip"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_tadv[\n]
out:  SYM	{1}, {[EXPR = [mb_tadv(index: 39)]: src = "mb_tadv"]}

in :  .type[\t]mb_tadv, @function[\n]
out:  TYPE	{[EXPR = [mb_tadv(index: 39)]: src = "mb_tadv"], [@IDENT: src = "@function"]}

in :  mb_tadv:
out:  LABEL	[sym: 39 loc: 510]

in :  .LFB19:
out:  LABEL	[sym: 3a loc: 516]

in :  .loc 3 155 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9b: src = "155"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-2(%fp)[\n]
out:  movew	{}

in :  .loc 3 155 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9b: src = "155"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%d1[\n]
out:  movew	{}

in :  move.w -2(%fp),%d0[\n]
out:  movew	{}

in :  add.w %d1,%d0[\n]
out:  addw	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,(%a0)[\n]
out:  movew	{}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE19:
out:  LABEL	[sym: 3b loc: 52b]

in :  .size[\t]mb_tadv, .-mb_tadv[\n]
out:  SIZE	{[EXPR = [mb_tadv(index: 39)]: src = "mb_tadv"], [EXPR = cx[10](0+ca([dot])-[ident 38:mb_tadv]): src = ".-mb_tadv"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_flush[\n]
out:  SYM	{1}, {[EXPR = [mb_flush(index: 3c)]: src = "mb_flush"]}

in :  .type[\t]mb_flush, @function[\n]
out:  TYPE	{[EXPR = [mb_flush(index: 3c)]: src = "mb_flush"], [@IDENT: src = "@function"]}

in :  mb_flush:
out:  LABEL	[sym: 3c loc: 533]

in :  .LFB20:
out:  LABEL	[sym: 3d loc: 539]

in :  .loc 3 157 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9d: src = "157"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-2(%fp)[\n]
out:  movew	{}

in :  .loc 3 157 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9d: src = "157"], [EXPR = 0: src = "0"]}

in :  move.w -2(%fp),%d0[\n]
out:  movew	{}

in :  move.w %d0,%d0[\n]
out:  movew	{}

in :  and.l #65535,%d0[\n]
out:  andl	{}

in :  pea 751 ;.w[\n]
out:  pea	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr chk[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  .loc 3 158 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = 9e: src = "158"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w -2(%fp),2(%a0)[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,(%a0)[\n]
out:  movew	{}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE20:
out:  LABEL	[sym: 3e loc: 556]

in :  .size[\t]mb_flush, .-mb_flush[\n]
out:  SIZE	{[EXPR = [mb_flush(index: 3c)]: src = "mb_flush"], [EXPR = cx[11](0+ca([dot])-[ident 3b:mb_flush]): src = ".-mb_flush"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_putc[\n]
out:  SYM	{1}, {[EXPR = [mb_putc(index: 3f)]: src = "mb_putc"]}

in :  .type[\t]mb_putc, @function[\n]
out:  TYPE	{[EXPR = [mb_putc(index: 3f)]: src = "mb_putc"], [@IDENT: src = "@function"]}

in :  mb_putc:
out:  LABEL	[sym: 3f loc: 55e]

in :  .LFB21:
out:  LABEL	[sym: 40 loc: 564]

in :  .loc 3 160 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a0: src = "160"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.b %d0,-6(%fp)[\n]
out:  moveb	{}

in :  .LBB2:
out:  LABEL	[sym: 41 loc: 56d]

in :  .loc 3 160 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a0: src = "160"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  move.l -4(%fp),%a1[\n]
out:  movel	{}

in :  move.b -6(%fp),16(%a1,%a0.l)[\n]
out:  moveb	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  addq.w #1,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,(%a0)[\n]
out:  movew	{}

in :  .LBE2:
out:  LABEL	[sym: 42 loc: 57b]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE21:
out:  LABEL	[sym: 43 loc: 581]

in :  .size[\t]mb_putc, .-mb_putc[\n]
out:  SIZE	{[EXPR = [mb_putc(index: 3f)]: src = "mb_putc"], [EXPR = cx[12](0+ca([dot])-[ident 3e:mb_putc]): src = ".-mb_putc"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_putw[\n]
out:  SYM	{1}, {[EXPR = [mb_putw(index: 44)]: src = "mb_putw"]}

in :  .type[\t]mb_putw, @function[\n]
out:  TYPE	{[EXPR = [mb_putw(index: 44)]: src = "mb_putw"], [@IDENT: src = "@function"]}

in :  mb_putw:
out:  LABEL	[sym: 44 loc: 589]

in :  .LFB22:
out:  LABEL	[sym: 45 loc: 58f]

in :  .loc 3 161 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a1: src = "161"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-6(%fp)[\n]
out:  movew	{}

in :  .LBB3:
out:  LABEL	[sym: 46 loc: 598]

in :  .loc 3 161 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a1: src = "161"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.w -6(%fp),(%a0)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  addq.w #2,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,(%a0)[\n]
out:  movew	{}

in :  .LBE3:
out:  LABEL	[sym: 47 loc: 5a7]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE22:
out:  LABEL	[sym: 48 loc: 5ad]

in :  .size[\t]mb_putw, .-mb_putw[\n]
out:  SIZE	{[EXPR = [mb_putw(index: 44)]: src = "mb_putw"], [EXPR = cx[13](0+ca([dot])-[ident 43:mb_putw]): src = ".-mb_putw"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_putl[\n]
out:  SYM	{1}, {[EXPR = [mb_putl(index: 49)]: src = "mb_putl"]}

in :  .type[\t]mb_putl, @function[\n]
out:  TYPE	{[EXPR = [mb_putl(index: 49)]: src = "mb_putl"], [@IDENT: src = "@function"]}

in :  mb_putl:
out:  LABEL	[sym: 49 loc: 5b5]

in :  .LFB23:
out:  LABEL	[sym: 4a loc: 5bb]

in :  .loc 3 162 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a2: src = "162"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB4:
out:  LABEL	[sym: 4b loc: 5c2]

in :  .loc 3 162 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a2: src = "162"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.l 12(%fp),(%a0)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w (%a0),%d0[\n]
out:  movew	{}

in :  addq.w #4,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,(%a0)[\n]
out:  movew	{}

in :  .LBE4:
out:  LABEL	[sym: 4c loc: 5d1]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE23:
out:  LABEL	[sym: 4d loc: 5d7]

in :  .size[\t]mb_putl, .-mb_putl[\n]
out:  SIZE	{[EXPR = [mb_putl(index: 49)]: src = "mb_putl"], [EXPR = cx[14](0+ca([dot])-[ident 48:mb_putl]): src = ".-mb_putl"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_getc[\n]
out:  SYM	{1}, {[EXPR = [mb_getc(index: 4e)]: src = "mb_getc"]}

in :  .type[\t]mb_getc, @function[\n]
out:  TYPE	{[EXPR = [mb_getc(index: 4e)]: src = "mb_getc"], [@IDENT: src = "@function"]}

in :  mb_getc:
out:  LABEL	[sym: 4e loc: 5df]

in :  .LFB24:
out:  LABEL	[sym: 4f loc: 5e5]

in :  .loc 3 165 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a5: src = "165"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB5:
out:  LABEL	[sym: 50 loc: 5ec]

in :  .loc 3 165 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a5: src = "165"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  move.l -4(%fp),%a1[\n]
out:  movel	{}

in :  move.b 16(%a1,%a0.l),-5(%fp)[\n]
out:  moveb	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #1,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,4(%a0)[\n]
out:  movew	{}

in :  move.b -5(%fp),%d0[\n]
out:  moveb	{}

in :  .LBE5:
out:  LABEL	[sym: 51 loc: 5fb]

in :  .loc 3 164 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a4: src = "164"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE24:
out:  LABEL	[sym: 52 loc: 601]

in :  .size[\t]mb_getc, .-mb_getc[\n]
out:  SIZE	{[EXPR = [mb_getc(index: 4e)]: src = "mb_getc"], [EXPR = cx[15](0+ca([dot])-[ident 4d:mb_getc]): src = ".-mb_getc"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_getw[\n]
out:  SYM	{1}, {[EXPR = [mb_getw(index: 53)]: src = "mb_getw"]}

in :  .type[\t]mb_getw, @function[\n]
out:  TYPE	{[EXPR = [mb_getw(index: 53)]: src = "mb_getw"], [@IDENT: src = "@function"]}

in :  mb_getw:
out:  LABEL	[sym: 53 loc: 609]

in :  .LFB25:
out:  LABEL	[sym: 54 loc: 60f]

in :  .loc 3 167 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a7: src = "167"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB6:
out:  LABEL	[sym: 55 loc: 616]

in :  .loc 3 167 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a7: src = "167"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.w (%a0),-6(%fp)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #2,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,4(%a0)[\n]
out:  movew	{}

in :  move.w -6(%fp),%d0[\n]
out:  movew	{}

in :  .LBE6:
out:  LABEL	[sym: 56 loc: 626]

in :  .loc 3 166 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a6: src = "166"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE25:
out:  LABEL	[sym: 57 loc: 62c]

in :  .size[\t]mb_getw, .-mb_getw[\n]
out:  SIZE	{[EXPR = [mb_getw(index: 53)]: src = "mb_getw"], [EXPR = cx[16](0+ca([dot])-[ident 52:mb_getw]): src = ".-mb_getw"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_getl[\n]
out:  SYM	{1}, {[EXPR = [mb_getl(index: 58)]: src = "mb_getl"]}

in :  .type[\t]mb_getl, @function[\n]
out:  TYPE	{[EXPR = [mb_getl(index: 58)]: src = "mb_getl"], [@IDENT: src = "@function"]}

in :  mb_getl:
out:  LABEL	[sym: 58 loc: 634]

in :  .LFB26:
out:  LABEL	[sym: 59 loc: 63a]

in :  .loc 3 169 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a9: src = "169"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB7:
out:  LABEL	[sym: 5a loc: 641]

in :  .loc 3 169 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a9: src = "169"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.l (%a0),-8(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 4(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #4,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,4(%a0)[\n]
out:  movew	{}

in :  move.l -8(%fp),%d0[\n]
out:  movel	{}

in :  .LBE7:
out:  LABEL	[sym: 5b loc: 651]

in :  .loc 3 168 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = a8: src = "168"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE26:
out:  LABEL	[sym: 5c loc: 657]

in :  .size[\t]mb_getl, .-mb_getl[\n]
out:  SIZE	{[EXPR = [mb_getl(index: 58)]: src = "mb_getl"], [EXPR = cx[17](0+ca([dot])-[ident 57:mb_getl]): src = ".-mb_getl"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_pushc[\n]
out:  SYM	{1}, {[EXPR = [mb_pushc(index: 5d)]: src = "mb_pushc"]}

in :  .type[\t]mb_pushc, @function[\n]
out:  TYPE	{[EXPR = [mb_pushc(index: 5d)]: src = "mb_pushc"], [@IDENT: src = "@function"]}

in :  mb_pushc:
out:  LABEL	[sym: 5d loc: 65f]

in :  .LFB27:
out:  LABEL	[sym: 5e loc: 665]

in :  .loc 3 171 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ab: src = "171"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.b %d0,-6(%fp)[\n]
out:  moveb	{}

in :  .LBB8:
out:  LABEL	[sym: 5f loc: 66e]

in :  .loc 3 171 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ab: src = "171"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  subq.w #1,%d0[\n]
out:  subqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.b -6(%fp),(%a0)[\n]
out:  moveb	{}

in :  .LBE8:
out:  LABEL	[sym: 60 loc: 67d]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE27:
out:  LABEL	[sym: 61 loc: 683]

in :  .size[\t]mb_pushc, .-mb_pushc[\n]
out:  SIZE	{[EXPR = [mb_pushc(index: 5d)]: src = "mb_pushc"], [EXPR = cx[18](0+ca([dot])-[ident 5c:mb_pushc]): src = ".-mb_pushc"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_pushw[\n]
out:  SYM	{1}, {[EXPR = [mb_pushw(index: 62)]: src = "mb_pushw"]}

in :  .type[\t]mb_pushw, @function[\n]
out:  TYPE	{[EXPR = [mb_pushw(index: 62)]: src = "mb_pushw"], [@IDENT: src = "@function"]}

in :  mb_pushw:
out:  LABEL	[sym: 62 loc: 68b]

in :  .LFB28:
out:  LABEL	[sym: 63 loc: 691]

in :  .loc 3 172 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ac: src = "172"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  move.l 12(%fp),%d0[\n]
out:  movel	{}

in :  move.w %d0,-6(%fp)[\n]
out:  movew	{}

in :  .LBB9:
out:  LABEL	[sym: 64 loc: 69a]

in :  .loc 3 172 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ac: src = "172"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  subq.w #2,%d0[\n]
out:  subqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.w -6(%fp),(%a0)[\n]
out:  movew	{}

in :  .LBE9:
out:  LABEL	[sym: 65 loc: 6a9]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE28:
out:  LABEL	[sym: 66 loc: 6af]

in :  .size[\t]mb_pushw, .-mb_pushw[\n]
out:  SIZE	{[EXPR = [mb_pushw(index: 62)]: src = "mb_pushw"], [EXPR = cx[19](0+ca([dot])-[ident 61:mb_pushw]): src = ".-mb_pushw"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_pushl[\n]
out:  SYM	{1}, {[EXPR = [mb_pushl(index: 67)]: src = "mb_pushl"]}

in :  .type[\t]mb_pushl, @function[\n]
out:  TYPE	{[EXPR = [mb_pushl(index: 67)]: src = "mb_pushl"], [@IDENT: src = "@function"]}

in :  mb_pushl:
out:  LABEL	[sym: 67 loc: 6b7]

in :  .LFB29:
out:  LABEL	[sym: 68 loc: 6bd]

in :  .loc 3 173 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ad: src = "173"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB10:
out:  LABEL	[sym: 69 loc: 6c4]

in :  .loc 3 173 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = ad: src = "173"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  subq.w #4,%d0[\n]
out:  subqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.l 12(%fp),(%a0)[\n]
out:  movel	{}

in :  .LBE10:
out:  LABEL	[sym: 6a loc: 6d3]

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE29:
out:  LABEL	[sym: 6b loc: 6d9]

in :  .size[\t]mb_pushl, .-mb_pushl[\n]
out:  SIZE	{[EXPR = [mb_pushl(index: 67)]: src = "mb_pushl"], [EXPR = cx[1a](0+ca([dot])-[ident 66:mb_pushl]): src = ".-mb_pushl"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_popc[\n]
out:  SYM	{1}, {[EXPR = [mb_popc(index: 6c)]: src = "mb_popc"]}

in :  .type[\t]mb_popc, @function[\n]
out:  TYPE	{[EXPR = [mb_popc(index: 6c)]: src = "mb_popc"], [@IDENT: src = "@function"]}

in :  mb_popc:
out:  LABEL	[sym: 6c loc: 6e1]

in :  .LFB30:
out:  LABEL	[sym: 6d loc: 6e7]

in :  .loc 3 176 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b0: src = "176"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB11:
out:  LABEL	[sym: 6e loc: 6ee]

in :  .loc 3 176 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b0: src = "176"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  move.l -4(%fp),%a1[\n]
out:  movel	{}

in :  move.b 16(%a1,%a0.l),-5(%fp)[\n]
out:  moveb	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #1,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.b -5(%fp),%d0[\n]
out:  moveb	{}

in :  .LBE11:
out:  LABEL	[sym: 6f loc: 6fd]

in :  .loc 3 175 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = af: src = "175"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE30:
out:  LABEL	[sym: 70 loc: 703]

in :  .size[\t]mb_popc, .-mb_popc[\n]
out:  SIZE	{[EXPR = [mb_popc(index: 6c)]: src = "mb_popc"], [EXPR = cx[1b](0+ca([dot])-[ident 6b:mb_popc]): src = ".-mb_popc"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_popw[\n]
out:  SYM	{1}, {[EXPR = [mb_popw(index: 71)]: src = "mb_popw"]}

in :  .type[\t]mb_popw, @function[\n]
out:  TYPE	{[EXPR = [mb_popw(index: 71)]: src = "mb_popw"], [@IDENT: src = "@function"]}

in :  mb_popw:
out:  LABEL	[sym: 71 loc: 70b]

in :  .LFB31:
out:  LABEL	[sym: 72 loc: 711]

in :  .loc 3 178 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b2: src = "178"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB12:
out:  LABEL	[sym: 73 loc: 718]

in :  .loc 3 178 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b2: src = "178"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.w (%a0),-6(%fp)[\n]
out:  movew	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #2,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.w -6(%fp),%d0[\n]
out:  movew	{}

in :  .LBE12:
out:  LABEL	[sym: 74 loc: 728]

in :  .loc 3 177 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b1: src = "177"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE31:
out:  LABEL	[sym: 75 loc: 72e]

in :  .size[\t]mb_popw, .-mb_popw[\n]
out:  SIZE	{[EXPR = [mb_popw(index: 71)]: src = "mb_popw"], [EXPR = cx[1c](0+ca([dot])-[ident 70:mb_popw]): src = ".-mb_popw"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]mb_popl[\n]
out:  SYM	{1}, {[EXPR = [mb_popl(index: 76)]: src = "mb_popl"]}

in :  .type[\t]mb_popl, @function[\n]
out:  TYPE	{[EXPR = [mb_popl(index: 76)]: src = "mb_popl"], [@IDENT: src = "@function"]}

in :  mb_popl:
out:  LABEL	[sym: 76 loc: 736]

in :  .LFB32:
out:  LABEL	[sym: 77 loc: 73c]

in :  .loc 3 180 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b4: src = "180"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-8[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .LBB13:
out:  LABEL	[sym: 78 loc: 743]

in :  .loc 3 180 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b4: src = "180"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-4(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  move.w %d0,%a0[\n]
out:  movew	{}

in :  lea (16,%a0),%a0[\n]
out:  lea	{}

in :  add.l -4(%fp),%a0[\n]
out:  addl	{}

in :  move.l (%a0),-8(%fp)[\n]
out:  movel	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w 2(%a0),%d0[\n]
out:  movew	{}

in :  addq.w #4,%d0[\n]
out:  addqw	{}

in :  move.l -4(%fp),%a0[\n]
out:  movel	{}

in :  move.w %d0,2(%a0)[\n]
out:  movew	{}

in :  move.l -8(%fp),%d0[\n]
out:  movel	{}

in :  .LBE13:
out:  LABEL	[sym: 79 loc: 753]

in :  .loc 3 179 0[\n]
out:  DW_LINE	{[EXPR = 3: src = "3"], [EXPR = b3: src = "179"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE32:
out:  LABEL	[sym: 7a loc: 759]

in :  .size[\t]mb_popl, .-mb_popl[\n]
out:  SIZE	{[EXPR = [mb_popl(index: 76)]: src = "mb_popl"], [EXPR = cx[1d](0+ca([dot])-[ident 75:mb_popl]): src = ".-mb_popl"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .type[\t]exec, @function[\n]
out:  TYPE	{[EXPR = [exec(index: 7b)]: src = "exec"], [@IDENT: src = "@function"]}

in :  exec:
out:  LABEL	[sym: 7b loc: 761]

in :  .LFB33:
out:  LABEL	[sym: 7c loc: 765]

in :  .file 4 "proc.h"[\n]
out:  DW_FILE	{[EXPR = 4: src = "4"], [EXPR = "proc.h": src = ""proc.h""]}

in :  .loc 4 35 0[\n]
out:  DW_LINE	{[EXPR = 4: src = "4"], [EXPR = 23: src = "35"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#0[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 4 35 0[\n]
out:  DW_LINE	{[EXPR = 4: src = "4"], [EXPR = 23: src = "35"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.l (%a0),%a0[\n]
out:  movel	{}

in :  move.l 8(%fp),%a1[\n]
out:  movel	{}

in :  move.l 4(%a1),%d0[\n]
out:  movel	{}

in :  move.l 12(%fp),-(%sp)[\n]
out:  movel	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr (%a0)[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE33:
out:  LABEL	[sym: 7d loc: 77a]

in :  .size[\t]exec, .-exec[\n]
out:  SIZE	{[EXPR = [exec(index: 7b)]: src = "exec"], [EXPR = cx[1e](0+ca([dot])-[ident 7a:exec]): src = ".-exec"]}

in :  .local[\t]in_panic[\n]
out:  SYM	{0}, {[EXPR = [in_panic(index: 7e)]: src = "in_panic"]}

in :  .comm[\t]in_panic,1,1[\n]
out:  COMM	{1}, {[EXPR = [in_panic(index: 7e)]: src = "in_panic"], [EXPR = 1: src = "1"], [EXPR = 1: src = "1"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]putchar[\n]
out:  SYM	{1}, {[EXPR = [putchar(index: 7f)]: src = "putchar"]}

in :  .type[\t]putchar, @function[\n]
out:  TYPE	{[EXPR = [putchar(index: 7f)]: src = "putchar"], [@IDENT: src = "@function"]}

in :  putchar:
out:  LABEL	[sym: 7f loc: 786]

in :  .LFB34:
out:  LABEL	[sym: 80 loc: 78c]

in :  .file 5 "putchar.c"[\n]
out:  DW_FILE	{[EXPR = 5: src = "5"], [EXPR = "putchar.c": src = ""putchar.c""]}

in :  .loc 5 34 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 22: src = "34"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 5 36 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 24: src = "36"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  move.l %d0,-4(%fp)[\n]
out:  movel	{}

in :  .loc 5 38 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 26: src = "38"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jeq .L52[\n]
out:  jeq	{}

in :  .loc 5 39 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 27: src = "39"], [EXPR = 0: src = "0"]}

in :  move.l -4(%fp),%d1[\n]
out:  movel	{}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  move.l %d1,-(%sp)[\n]
out:  movel	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr queue[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  jra .L53[\n]
out:  jra	{}

in :  .L52:
out:  LABEL	[sym: 82 loc: 79b]

in :  .LBB14:
out:  LABEL	[sym: 84 loc: 7aa]

in :  .loc 5 41 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 29: src = "41"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-(%sp)[\n]
out:  movel	{}

in :  jsr putConsoleChar[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  .L53:
out:  LABEL	[sym: 83 loc: 7a6]

in :  .LBE14:
out:  LABEL	[sym: 86 loc: 7b3]

in :  .loc 5 42 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 2a: src = "42"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE34:
out:  LABEL	[sym: 87 loc: 7ba]

in :  .size[\t]putchar, .-putchar[\n]
out:  SIZE	{[EXPR = [putchar(index: 7f)]: src = "putchar"], [EXPR = cx[1f](0+ca([dot])-[ident 7e:putchar]): src = ".-putchar"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]puts[\n]
out:  SYM	{1}, {[EXPR = [puts(index: 88)]: src = "puts"]}

in :  .type[\t]puts, @function[\n]
out:  TYPE	{[EXPR = [puts(index: 88)]: src = "puts"], [@IDENT: src = "@function"]}

in :  puts:
out:  LABEL	[sym: 88 loc: 7c2]

in :  .LFB35:
out:  LABEL	[sym: 89 loc: 7c8]

in :  .loc 5 46 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 2e: src = "46"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 5 47 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 2f: src = "47"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jeq .L57[\n]
out:  jeq	{}

in :  .LBB15:
out:  LABEL	[sym: 8b loc: 7d5]

in :  .loc 5 48 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 30: src = "48"], [EXPR = 0: src = "0"]}

in :  clr.l -(%sp)[\n]
out:  clrl	{}

in :  jsr mb_alloc[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  move.l %d0,-4(%fp)[\n]
out:  movel	{}

in :  .loc 5 49 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 31: src = "49"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-(%sp)[\n]
out:  movel	{}

in :  move.l -4(%fp),-(%sp)[\n]
out:  movel	{}

in :  jsr mb_stradd[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  .loc 5 50 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 32: src = "50"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  move.l -4(%fp),-(%sp)[\n]
out:  movel	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr queue[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  .LBE15:
out:  LABEL	[sym: 8e loc: 7eb]

in :  .loc 5 54 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 36: src = "54"], [EXPR = 0: src = "0"]}

in :  jra .L59[\n]
out:  jra	{}

in :  .L58:
out:  LABEL	[sym: 90 loc: 7f0]

in :  .loc 5 53 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 35: src = "53"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%d0[\n]
out:  movel	{}

in :  move.l %d0,%d1[\n]
out:  movel	{}

in :  addq.l #1,%d1[\n]
out:  addql	{}

in :  move.l %d1,8(%fp)[\n]
out:  movel	{}

in :  move.l %d0,%a0[\n]
out:  movel	{}

in :  move.b (%a0),%d0[\n]
out:  moveb	{}

in :  extb.l %d0[\n]
out:  extbl	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr putchar[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  .L57:
out:  LABEL	[sym: 8a loc: 7d3]

in :  .loc 5 52 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 34: src = "52"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),%a0[\n]
out:  movel	{}

in :  move.b (%a0),%d0[\n]
out:  moveb	{}

in :  tst.b %d0[\n]
out:  tstb	{}

in :  jne .L58[\n]
out:  jne	{}

in :  .L59:
out:  LABEL	[sym: 8f loc: 7ee]

in :  .loc 5 54 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 36: src = "54"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE35:
out:  LABEL	[sym: 91 loc: 80d]

in :  .size[\t]puts, .-puts[\n]
out:  SIZE	{[EXPR = [puts(index: 88)]: src = "puts"], [EXPR = cx[20](0+ca([dot])-[ident 87:puts]): src = ".-puts"]}

in :  .comm[\t]panicstr,4,2[\n]
out:  COMM	{1}, {[EXPR = [panicstr(index: 92)]: src = "panicstr"], [EXPR = 4: src = "4"], [EXPR = 2: src = "2"]}

in :  .section[\t].rodata[\n]
out:  SEG	{[EXPR = [.rodata(index: 93)]: src = ".rodata"]}

in :  .LC0:
out:  LABEL	[sym: 94 loc: 818]

in :  .string[\t]"in panic"[\n]
out:  STR<1>	{[EXPR = "in panic": src = ""in panic""]}

in :  .LC1:
out:  LABEL	[sym: 95 loc: 81b]

in :  .string[\t]"\nPanic: "[\n]
out:  STR<1>	{[EXPR = " aPanic: ": src = ""\nPanic: ""]}

in :  .text[\n]
out:  SEG	{.text}, {[MISSING: src = ""]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]panic[\n]
out:  SYM	{1}, {[EXPR = [panic(index: 96)]: src = "panic"]}

in :  .type[\t]panic, @function[\n]
out:  TYPE	{[EXPR = [panic(index: 96)]: src = "panic"], [@IDENT: src = "@function"]}

in :  panic:
out:  LABEL	[sym: 96 loc: 820]

in :  .LFB36:
out:  LABEL	[sym: 97 loc: 826]

in :  .loc 5 60 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 3c: src = "60"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-4[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 5 62 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 3e: src = "62"], [EXPR = 0: src = "0"]}

in :  move.l panicstr,%d0[\n]
out:  movel	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jne .L64[\n]
out:  jne	{}

in :  .loc 5 63 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 3f: src = "63"], [EXPR = 0: src = "0"]}

in :  move.l console_out,-4(%fp)[\n]
out:  movel	{}

in :  .loc 5 64 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 40: src = "64"], [EXPR = 0: src = "0"]}

in :  clr.l console_out[\n]
out:  clrl	{}

in :  .loc 5 65 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 41: src = "65"], [EXPR = 0: src = "0"]}

in :  move.l #.LC0,panicstr[\n]
out:  movel	{}

in :  .loc 5 66 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 42: src = "66"], [EXPR = 0: src = "0"]}

in :  pea .LC1[\n]
out:  pea	{}

in :  jsr puts[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  .loc 5 67 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 43: src = "67"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),-(%sp)[\n]
out:  movel	{}

in :  jsr puts[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  .loc 5 68 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 44: src = "68"], [EXPR = 0: src = "0"]}

in :  move.l -4(%fp),console_out[\n]
out:  movel	{}

in :  .loc 5 70 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 46: src = "70"], [EXPR = 0: src = "0"]}

in :  move.l 8(%fp),panicstr[\n]
out:  movel	{}

in :  .loc 5 71 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 47: src = "71"], [EXPR = 0: src = "0"]}

in :  jsr abort[\n]
out:  jsr	{}

in :  .L64:
out:  LABEL	[sym: 98 loc: 831]

in :  .loc 5 62 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 3e: src = "62"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  .loc 5 72 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 48: src = "72"], [EXPR = 0: src = "0"]}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE36:
out:  LABEL	[sym: 99 loc: 859]

in :  .size[\t]panic, .-panic[\n]
out:  SIZE	{[EXPR = [panic(index: 96)]: src = "panic"], [EXPR = cx[21](0+ca([dot])-[ident 95:panic]): src = ".-panic"]}

in :  .align[\t]2[\n]
out:  ALIGN	{[EXPR = 2: src = "2"]}

in :  .globl[\t]abort_supv[\n]
out:  SYM	{1}, {[EXPR = [abort_supv(index: 9a)]: src = "abort_supv"]}

in :  .type[\t]abort_supv, @function[\n]
out:  TYPE	{[EXPR = [abort_supv(index: 9a)]: src = "abort_supv"], [@IDENT: src = "@function"]}

in :  abort_supv:
out:  LABEL	[sym: 9a loc: 861]

in :  .LFB37:
out:  LABEL	[sym: 9b loc: 867]

in :  .loc 5 76 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 4c: src = "76"], [EXPR = 0: src = "0"]}

in :  .cfi_startproc[\n]
out:  DW_START_FRAME	{[MISSING: src = ""]}

in :  link.w %fp,#-12[\n]
out:  linkw	{}

in :  .cfi_offset 14, -8[\n]
out:  DW_FRAME_CMD	{128, 2}, {[EXPR = e: src = "14"], [EXPR = fffffff8: src = "-8"]}

in :  .cfi_def_cfa 14, 8[\n]
out:  DW_FRAME_CMD	{12, 2}, {[EXPR = e: src = "14"], [EXPR = 8: src = "8"]}

in :  .loc 5 77 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 4d: src = "77"], [EXPR = 0: src = "0"]}

in :  jsr __display_current_proc[\n]
out:  jsr	{}

in :  .loc 5 78 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 4e: src = "78"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jeq .L66[\n]
out:  jeq	{}

in :  .LBB16:
out:  LABEL	[sym: 9e loc: 877]

in :  .loc 5 83 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 53: src = "83"], [EXPR = 0: src = "0"]}

in :  jra .L67[\n]
out:  jra	{}

in :  .L69:
out:  LABEL	[sym: a0 loc: 87c]

in :  .LBB17:
out:  LABEL	[sym: a1 loc: 87e]

in :  .loc 5 84 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 54: src = "84"], [EXPR = 0: src = "0"]}

in :  move.l sys_queue_head,%a0[\n]
out:  movel	{}

in :  move.l %a0,%d0[\n]
out:  movel	{}

in :  addq.l #4,%d0[\n]
out:  addql	{}

in :  move.l %d0,sys_queue_head[\n]
out:  movel	{}

in :  move.l (%a0),-8(%fp)[\n]
out:  movel	{}

in :  .loc 5 85 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 55: src = "85"], [EXPR = 0: src = "0"]}

in :  move.l sys_queue_head,%a0[\n]
out:  movel	{}

in :  move.l %a0,%d0[\n]
out:  movel	{}

in :  addq.l #4,%d0[\n]
out:  addql	{}

in :  move.l %d0,sys_queue_head[\n]
out:  movel	{}

in :  move.l (%a0),-12(%fp)[\n]
out:  movel	{}

in :  .loc 5 86 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 56: src = "86"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%d0[\n]
out:  movel	{}

in :  cmp.l -8(%fp),%d0[\n]
out:  cmpl	{}

in :  jne .L68[\n]
out:  jne	{}

in :  .loc 5 87 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 57: src = "87"], [EXPR = 0: src = "0"]}

in :  move.l -12(%fp),-(%sp)[\n]
out:  movel	{}

in :  move.l -8(%fp),-(%sp)[\n]
out:  movel	{}

in :  jsr exec[\n]
out:  jsr	{}

in :  addq.l #8,%sp[\n]
out:  addql	{}

in :  .L68:
out:  LABEL	[sym: a3 loc: 894]

in :  .loc 5 88 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 58: src = "88"], [EXPR = 0: src = "0"]}

in :  move.l sys_queue_head,%d0[\n]
out:  movel	{}

in :  cmp.l #sys_queue_tail,%d0[\n]
out:  cmpl	{}

in :  jne .L67[\n]
out:  jne	{}

in :  .loc 5 89 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 59: src = "89"], [EXPR = 0: src = "0"]}

in :  move.l #sys_queue_table,sys_queue_head[\n]
out:  movel	{}

in :  .L67:
out:  LABEL	[sym: 9f loc: 87a]

in :  .LBE17:
out:  LABEL	[sym: a6 loc: 8ab]

in :  .loc 5 83 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 53: src = "83"], [EXPR = 0: src = "0"]}

in :  move.l sys_queue_head,%d1[\n]
out:  movel	{}

in :  move.l sys_queue_tail,%d0[\n]
out:  movel	{}

in :  cmp.l %d1,%d0[\n]
out:  cmpl	{}

in :  jne .L69[\n]
out:  jne	{}

in :  .loc 5 92 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 5c: src = "92"], [EXPR = 0: src = "0"]}

in :  move.l #10000,-4(%fp)[\n]
out:  movel	{}

in :  .loc 5 93 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 5d: src = "93"], [EXPR = 0: src = "0"]}

in :  jra .L70[\n]
out:  jra	{}

in :  .L71:
out:  LABEL	[sym: a8 loc: 8ba]

in :  .LBB18:
out:  LABEL	[sym: a9 loc: 8bc]

in :  .loc 5 94 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 5e: src = "94"], [EXPR = 0: src = "0"]}

in :  move.l console_out,%a0[\n]
out:  movel	{}

in :  move.l 4(%a0),%d0[\n]
out:  movel	{}

in :  move.l %d0,-(%sp)[\n]
out:  movel	{}

in :  jsr atx_idle[\n]
out:  jsr	{}

in :  addq.l #4,%sp[\n]
out:  addql	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jne .L72[\n]
out:  jne	{}

in :  .L70:
out:  LABEL	[sym: a7 loc: 8b8]

in :  .LBE18:
out:  LABEL	[sym: ac loc: 8cb]

in :  .loc 5 93 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 5d: src = "93"], [EXPR = 0: src = "0"]}

in :  move.l -4(%fp),%d0[\n]
out:  movel	{}

in :  move.l %d0,%d1[\n]
out:  movel	{}

in :  subq.l #1,%d1[\n]
out:  subql	{}

in :  move.l %d1,-4(%fp)[\n]
out:  movel	{}

in :  tst.l %d0[\n]
out:  tstl	{}

in :  jne .L71[\n]
out:  jne	{}

in :  jra .L66[\n]
out:  jra	{}

in :  .L72:
out:  LABEL	[sym: ab loc: 8c7]

in :  .LBB19:
out:  LABEL	[sym: ad loc: 8d9]

in :  .loc 5 95 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 5f: src = "95"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  .L66:
out:  LABEL	[sym: 9d loc: 875]

in :  .LBE19:
out:  LABEL	[sym: ae loc: 8df]

in :  .LBE16:
out:  LABEL	[sym: af loc: 8e1]

in :  .loc 5 98 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 62: src = "98"], [EXPR = 0: src = "0"]}

in :  | 98 "putchar.c" 1[\n]
out:  ERROR	[kas::parser::kas_diag: 5 loc: |]

in :  illegal[\n]
out:  illegal	{}

in :  | 0 "" 2[\n]
out:  ERROR	[kas::parser::kas_diag: 6 loc: |]

in :  .loc 5 99 0[\n]
out:  DW_LINE	{[EXPR = 5: src = "5"], [EXPR = 63: src = "99"], [EXPR = 0: src = "0"]}

in :  nop[\n]
out:  nop	{}

in :  unlk %fp[\n]
out:  unlk	{}

in :  rts[\n]
out:  rts	{}

in :  .cfi_endproc[\n]
out:  DW_END_FRAME	{[MISSING: src = ""]}

in :  .LFE37:
out:  LABEL	[sym: b0 loc: 8ee]

in :  .size[\t]abort_supv, .-abort_supv[\n]
out:  SIZE	{[EXPR = [abort_supv(index: 9a)]: src = "abort_supv"], [EXPR = cx[22](0+ca([dot])-[ident 99:abort_supv]): src = ".-abort_supv"]}

in :  .Letext0:
out:  LABEL	[sym: b1 loc: 8f5]

in :  .file 6 "types.h"[\n]
out:  DW_FILE	{[EXPR = 6: src = "6"], [EXPR = "types.h": src = ""types.h""]}

in :  .file 7 "caos.h"[\n]
out:  DW_FILE	{[EXPR = 7: src = "7"], [EXPR = "caos.h": src = ""caos.h""]}

in :  .section[\t].debug_info,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_info(index: b2)]: src = ".debug_info"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_info0:
out:  LABEL	[sym: b3 loc: 8fb]

in :  .long[\t]0x9b7[\n]
out:  INT<4>	{[EXPR = 9b7: src = "0x9b7"]}

in :  .word[\t]0x4[\n]
out:  INT<2>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t].Ldebug_abbrev0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_abbrev0(index: b4)]: src = ".Ldebug_abbrev0"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .long[\t].LASF68[\n]
out:  INT<4>	{[EXPR = [.LASF68(index: b5)]: src = ".LASF68"]}

in :  .byte[\t]0xc[\n]
out:  INT<1>	{[EXPR = c: src = "0xc"]}

in :  .long[\t].LASF69[\n]
out:  INT<4>	{[EXPR = [.LASF69(index: b6)]: src = ".LASF69"]}

in :  .long[\t].LASF70[\n]
out:  INT<4>	{[EXPR = [.LASF70(index: b7)]: src = ".LASF70"]}

in :  .long[\t].Ltext0[\n]
out:  INT<4>	{[EXPR = [.Ltext0(index: 1)]: src = ".Ltext0"]}

in :  .long[\t].Letext0-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[23](0+[ident b0:.Letext0]-[ident 0:.Ltext0]): src = ".Letext0-.Ltext0"]}

in :  .long[\t].Ldebug_line0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_line0(index: b8)]: src = ".Ldebug_line0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF0[\n]
out:  INT<4>	{[EXPR = [.LASF0(index: b9)]: src = ".LASF0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .long[\t].LASF2[\n]
out:  INT<4>	{[EXPR = [.LASF2(index: ba)]: src = ".LASF2"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0x21[\n]
out:  INT<1>	{[EXPR = 21: src = "0x21"]}

in :  .long[\t]0x37[\n]
out:  INT<4>	{[EXPR = 37: src = "0x37"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF1[\n]
out:  INT<4>	{[EXPR = [.LASF1(index: bb)]: src = ".LASF1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .long[\t].LASF3[\n]
out:  INT<4>	{[EXPR = [.LASF3(index: bc)]: src = ".LASF3"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x8[\n]
out:  INT<1>	{[EXPR = 8: src = "0x8"]}

in :  .long[\t].LASF4[\n]
out:  INT<4>	{[EXPR = [.LASF4(index: bd)]: src = ".LASF4"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .long[\t].LASF5[\n]
out:  INT<4>	{[EXPR = [.LASF5(index: be)]: src = ".LASF5"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0x24[\n]
out:  INT<1>	{[EXPR = 24: src = "0x24"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF6[\n]
out:  INT<4>	{[EXPR = [.LASF6(index: bf)]: src = ".LASF6"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .long[\t].LASF7[\n]
out:  INT<4>	{[EXPR = [.LASF7(index: c0)]: src = ".LASF7"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x6f[\n]
out:  INT<4>	{[EXPR = 6f: src = "0x6f"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .string[\t]"int"[\n]
out:  STR<1>	{[EXPR = "int": src = ""int""]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .long[\t].LASF8[\n]
out:  INT<4>	{[EXPR = [.LASF8(index: c1)]: src = ".LASF8"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0x2d[\n]
out:  INT<1>	{[EXPR = 2d: src = "0x2d"]}

in :  .long[\t]0x8a[\n]
out:  INT<4>	{[EXPR = 8a: src = "0x8a"]}

in :  .uleb128 0x9[\n]
out:  ULEB128	{[EXPR = 9: src = "0x9"]}

in :  .long[\t].LASF13[\n]
out:  INT<4>	{[EXPR = [.LASF13(index: c2)]: src = ".LASF13"]}

in :  .byte[\t]0x10[\n]
out:  INT<1>	{[EXPR = 10: src = "0x10"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x1c[\n]
out:  INT<1>	{[EXPR = 1c: src = "0x1c"]}

in :  .long[\t]0xc6[\n]
out:  INT<4>	{[EXPR = c6: src = "0xc6"]}

in :  .uleb128 0xa[\n]
out:  ULEB128	{[EXPR = a: src = "0xa"]}

in :  .string[\t]"fn"[\n]
out:  STR<1>	{[EXPR = "fn": src = ""fn""]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x1d[\n]
out:  INT<1>	{[EXPR = 1d: src = "0x1d"]}

in :  .long[\t]0x69[\n]
out:  INT<4>	{[EXPR = 69: src = "0x69"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF9[\n]
out:  INT<4>	{[EXPR = [.LASF9(index: c3)]: src = ".LASF9"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x1e[\n]
out:  INT<1>	{[EXPR = 1e: src = "0x1e"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF10[\n]
out:  INT<4>	{[EXPR = [.LASF10(index: c4)]: src = ".LASF10"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x17a[\n]
out:  INT<4>	{[EXPR = 17a: src = "0x17a"]}

in :  .byte[\t]0x8[\n]
out:  INT<1>	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF11[\n]
out:  INT<4>	{[EXPR = [.LASF11(index: c5)]: src = ".LASF11"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x17a[\n]
out:  INT<4>	{[EXPR = 17a: src = "0x17a"]}

in :  .byte[\t]0xc[\n]
out:  INT<1>	{[EXPR = c: src = "0xc"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .long[\t].LASF12[\n]
out:  INT<4>	{[EXPR = [.LASF12(index: c6)]: src = ".LASF12"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x29[\n]
out:  INT<1>	{[EXPR = 29: src = "0x29"]}

in :  .long[\t]0xd1[\n]
out:  INT<4>	{[EXPR = d1: src = "0xd1"]}

in :  .uleb128 0xc[\n]
out:  ULEB128	{[EXPR = c: src = "0xc"]}

in :  .long[\t].LASF14[\n]
out:  INT<4>	{[EXPR = [.LASF14(index: c7)]: src = ".LASF14"]}

in :  .word[\t]0x300[\n]
out:  INT<2>	{[EXPR = 300: src = "0x300"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x34[\n]
out:  INT<1>	{[EXPR = 34: src = "0x34"]}

in :  .long[\t]0xf5[\n]
out:  INT<4>	{[EXPR = f5: src = "0xf5"]}

in :  .uleb128 0xa[\n]
out:  ULEB128	{[EXPR = a: src = "0xa"]}

in :  .string[\t]"h"[\n]
out:  STR<1>	{[EXPR = "h": src = ""h""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x35[\n]
out:  INT<1>	{[EXPR = 35: src = "0x35"]}

in :  .long[\t]0xf5[\n]
out:  INT<4>	{[EXPR = f5: src = "0xf5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF15[\n]
out:  INT<4>	{[EXPR = [.LASF15(index: c8)]: src = ".LASF15"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x36[\n]
out:  INT<1>	{[EXPR = 36: src = "0x36"]}

in :  .long[\t]0x162[\n]
out:  INT<4>	{[EXPR = 162: src = "0x162"]}

in :  .byte[\t]0x10[\n]
out:  INT<1>	{[EXPR = 10: src = "0x10"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x9[\n]
out:  ULEB128	{[EXPR = 9: src = "0x9"]}

in :  .long[\t].LASF16[\n]
out:  INT<4>	{[EXPR = [.LASF16(index: c9)]: src = ".LASF16"]}

in :  .byte[\t]0x10[\n]
out:  INT<1>	{[EXPR = 10: src = "0x10"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x2e[\n]
out:  INT<1>	{[EXPR = 2e: src = "0x2e"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF17[\n]
out:  INT<4>	{[EXPR = [.LASF17(index: ca)]: src = ".LASF17"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x2f[\n]
out:  INT<1>	{[EXPR = 2f: src = "0x2f"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF18[\n]
out:  INT<4>	{[EXPR = [.LASF18(index: cb)]: src = ".LASF18"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x2f[\n]
out:  INT<1>	{[EXPR = 2f: src = "0x2f"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0xa[\n]
out:  ULEB128	{[EXPR = a: src = "0xa"]}

in :  .string[\t]"rw"[\n]
out:  STR<1>	{[EXPR = "rw": src = ""rw""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x2f[\n]
out:  INT<1>	{[EXPR = 2f: src = "0x2f"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF19[\n]
out:  INT<4>	{[EXPR = [.LASF19(index: cc)]: src = ".LASF19"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x30[\n]
out:  INT<1>	{[EXPR = 30: src = "0x30"]}

in :  .long[\t]0x3e[\n]
out:  INT<4>	{[EXPR = 3e: src = "0x3e"]}

in :  .byte[\t]0x6[\n]
out:  INT<1>	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF20[\n]
out:  INT<4>	{[EXPR = [.LASF20(index: cd)]: src = ".LASF20"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x30[\n]
out:  INT<1>	{[EXPR = 30: src = "0x30"]}

in :  .long[\t]0x3e[\n]
out:  INT<4>	{[EXPR = 3e: src = "0x3e"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF21[\n]
out:  INT<4>	{[EXPR = [.LASF21(index: ce)]: src = ".LASF21"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x31[\n]
out:  INT<1>	{[EXPR = 31: src = "0x31"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .byte[\t]0x8[\n]
out:  INT<1>	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .long[\t].LASF22[\n]
out:  INT<4>	{[EXPR = [.LASF22(index: cf)]: src = ".LASF22"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x31[\n]
out:  INT<1>	{[EXPR = 31: src = "0x31"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .byte[\t]0xc[\n]
out:  INT<1>	{[EXPR = c: src = "0xc"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .long[\t].LASF23[\n]
out:  INT<4>	{[EXPR = [.LASF23(index: d0)]: src = ".LASF23"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0xc6[\n]
out:  INT<4>	{[EXPR = c6: src = "0xc6"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .long[\t]0x173[\n]
out:  INT<4>	{[EXPR = 173: src = "0x173"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .long[\t]0x173[\n]
out:  INT<4>	{[EXPR = 173: src = "0x173"]}

in :  .word[\t]0x2ef[\n]
out:  INT<2>	{[EXPR = 2ef: src = "0x2ef"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .long[\t].LASF24[\n]
out:  INT<4>	{[EXPR = [.LASF24(index: d1)]: src = ".LASF24"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x180[\n]
out:  INT<4>	{[EXPR = 180: src = "0x180"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .long[\t]0x62[\n]
out:  INT<4>	{[EXPR = 62: src = "0x62"]}

in :  .uleb128 0x10[\n]
out:  ULEB128	{[EXPR = 10: src = "0x10"]}

in :  .string[\t]"chk"[\n]
out:  STR<1>	{[EXPR = "chk": src = ""chk""]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t].LFB0[\n]
out:  INT<4>	{[EXPR = [.LFB0(index: 4)]: src = ".LFB0"]}

in :  .long[\t].LFE0-.LFB0[\n]
out:  INT<4>	{[EXPR = cx[24](0+[ident 4:.LFE0]-[ident 3:.LFB0]): src = ".LFE0-.LFB0"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x1b7[\n]
out:  INT<4>	{[EXPR = 1b7: src = "0x1b7"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .long[\t].LASF15[\n]
out:  INT<4>	{[EXPR = [.LASF15(index: c8)]: src = ".LASF15"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x50[\n]
out:  INT<4>	{[EXPR = 50: src = "0x50"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .long[\t].LASF25[\n]
out:  INT<4>	{[EXPR = [.LASF25(index: d2)]: src = ".LASF25"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x50[\n]
out:  INT<4>	{[EXPR = 50: src = "0x50"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .long[\t].LASF71[\n]
out:  INT<4>	{[EXPR = [.LASF71(index: d3)]: src = ".LASF71"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .byte[\t]0x42[\n]
out:  INT<1>	{[EXPR = 42: src = "0x42"]}

in :  .long[\t].LFB2[\n]
out:  INT<4>	{[EXPR = [.LFB2(index: 8)]: src = ".LFB2"]}

in :  .long[\t].LFE2-.LFB2[\n]
out:  INT<4>	{[EXPR = cx[25](0+[ident 9:.LFE2]-[ident 7:.LFB2]): src = ".LFE2-.LFB2"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .long[\t].LASF22[\n]
out:  INT<4>	{[EXPR = [.LASF22(index: cf)]: src = ".LASF22"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x56[\n]
out:  INT<1>	{[EXPR = 56: src = "0x56"]}

in :  .long[\t].LFB5[\n]
out:  INT<4>	{[EXPR = [.LFB5(index: c)]: src = ".LFB5"]}

in :  .long[\t].LFE5-.LFB5[\n]
out:  INT<4>	{[EXPR = cx[26](0+[ident 10:.LFE5]-[ident b:.LFB5]): src = ".LFE5-.LFB5"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x213[\n]
out:  INT<4>	{[EXPR = 213: src = "0x213"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .long[\t].LASF13[\n]
out:  INT<4>	{[EXPR = [.LASF13(index: c2)]: src = ".LASF13"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x56[\n]
out:  INT<1>	{[EXPR = 56: src = "0x56"]}

in :  .long[\t]0x213[\n]
out:  INT<4>	{[EXPR = 213: src = "0x213"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"arg"[\n]
out:  STR<1>	{[EXPR = "arg": src = ""arg""]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x56[\n]
out:  INT<1>	{[EXPR = 56: src = "0x56"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 4[\n]
out:  SLEB128	{[EXPR = 4: src = "4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x58[\n]
out:  INT<1>	{[EXPR = 58: src = "0x58"]}

in :  .long[\t]0x21e[\n]
out:  INT<4>	{[EXPR = 21e: src = "0x21e"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x50[\n]
out:  INT<1>	{[EXPR = 50: src = "0x50"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .long[\t].LASF26[\n]
out:  INT<4>	{[EXPR = [.LASF26(index: d4)]: src = ".LASF26"]}

in :  .byte[\t]0x2[\n]
out:  INT<1>	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x59[\n]
out:  INT<1>	{[EXPR = 59: src = "0x59"]}

in :  .long[\t]0x21e[\n]
out:  INT<4>	{[EXPR = 21e: src = "0x21e"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x51[\n]
out:  INT<1>	{[EXPR = 51: src = "0x51"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x219[\n]
out:  INT<4>	{[EXPR = 219: src = "0x219"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .long[\t]0x7f[\n]
out:  INT<4>	{[EXPR = 7f: src = "0x7f"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x224[\n]
out:  INT<4>	{[EXPR = 224: src = "0x224"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .long[\t].LASF34[\n]
out:  INT<4>	{[EXPR = [.LASF34(index: d5)]: src = ".LASF34"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8c[\n]
out:  INT<1>	{[EXPR = 8c: src = "0x8c"]}

in :  .long[\t].LFB7[\n]
out:  INT<4>	{[EXPR = [.LFB7(index: 13)]: src = ".LFB7"]}

in :  .long[\t].LFE7-.LFB7[\n]
out:  INT<4>	{[EXPR = cx[27](0+[ident 16:.LFE7]-[ident 12:.LFB7]): src = ".LFE7-.LFB7"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x247[\n]
out:  INT<4>	{[EXPR = 247: src = "0x247"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8c[\n]
out:  INT<1>	{[EXPR = 8c: src = "0x8c"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF27[\n]
out:  INT<4>	{[EXPR = [.LASF27(index: d6)]: src = ".LASF27"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8e[\n]
out:  INT<1>	{[EXPR = 8e: src = "0x8e"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .long[\t].LFB8[\n]
out:  INT<4>	{[EXPR = [.LFB8(index: 19)]: src = ".LFB8"]}

in :  .long[\t].LFE8-.LFB8[\n]
out:  INT<4>	{[EXPR = cx[28](0+[ident 19:.LFE8]-[ident 18:.LFB8]): src = ".LFE8-.LFB8"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x26d[\n]
out:  INT<4>	{[EXPR = 26d: src = "0x26d"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8e[\n]
out:  INT<1>	{[EXPR = 8e: src = "0x8e"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF28[\n]
out:  INT<4>	{[EXPR = [.LASF28(index: d7)]: src = ".LASF28"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8f[\n]
out:  INT<1>	{[EXPR = 8f: src = "0x8f"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB9[\n]
out:  INT<4>	{[EXPR = [.LFB9(index: 1c)]: src = ".LFB9"]}

in :  .long[\t].LFE9-.LFB9[\n]
out:  INT<4>	{[EXPR = cx[29](0+[ident 1c:.LFE9]-[ident 1b:.LFB9]): src = ".LFE9-.LFB9"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x293[\n]
out:  INT<4>	{[EXPR = 293: src = "0x293"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x8f[\n]
out:  INT<1>	{[EXPR = 8f: src = "0x8f"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF29[\n]
out:  INT<4>	{[EXPR = [.LASF29(index: d8)]: src = ".LASF29"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x90[\n]
out:  INT<1>	{[EXPR = 90: src = "0x90"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB10[\n]
out:  INT<4>	{[EXPR = [.LFB10(index: 1f)]: src = ".LFB10"]}

in :  .long[\t].LFE10-.LFB10[\n]
out:  INT<4>	{[EXPR = cx[2a](0+[ident 1f:.LFE10]-[ident 1e:.LFB10]): src = ".LFE10-.LFB10"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x2b9[\n]
out:  INT<4>	{[EXPR = 2b9: src = "0x2b9"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x90[\n]
out:  INT<1>	{[EXPR = 90: src = "0x90"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF30[\n]
out:  INT<4>	{[EXPR = [.LASF30(index: d9)]: src = ".LASF30"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .long[\t].LFB11[\n]
out:  INT<4>	{[EXPR = [.LFB11(index: 22)]: src = ".LFB11"]}

in :  .long[\t].LFE11-.LFB11[\n]
out:  INT<4>	{[EXPR = cx[2b](0+[ident 22:.LFE11]-[ident 21:.LFB11]): src = ".LFE11-.LFB11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x2df[\n]
out:  INT<4>	{[EXPR = 2df: src = "0x2df"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF31[\n]
out:  INT<4>	{[EXPR = [.LASF31(index: da)]: src = ".LASF31"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x92[\n]
out:  INT<1>	{[EXPR = 92: src = "0x92"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB12[\n]
out:  INT<4>	{[EXPR = [.LFB12(index: 25)]: src = ".LFB12"]}

in :  .long[\t].LFE12-.LFB12[\n]
out:  INT<4>	{[EXPR = cx[2c](0+[ident 25:.LFE12]-[ident 24:.LFB12]): src = ".LFE12-.LFB12"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x311[\n]
out:  INT<4>	{[EXPR = 311: src = "0x311"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x92[\n]
out:  INT<1>	{[EXPR = 92: src = "0x92"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"n"[\n]
out:  STR<1>	{[EXPR = "n": src = ""n""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x92[\n]
out:  INT<1>	{[EXPR = 92: src = "0x92"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF32[\n]
out:  INT<4>	{[EXPR = [.LASF32(index: db)]: src = ".LASF32"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x94[\n]
out:  INT<1>	{[EXPR = 94: src = "0x94"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB13[\n]
out:  INT<4>	{[EXPR = [.LFB13(index: 28)]: src = ".LFB13"]}

in :  .long[\t].LFE13-.LFB13[\n]
out:  INT<4>	{[EXPR = cx[2d](0+[ident 28:.LFE13]-[ident 27:.LFB13]): src = ".LFE13-.LFB13"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x337[\n]
out:  INT<4>	{[EXPR = 337: src = "0x337"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x94[\n]
out:  INT<1>	{[EXPR = 94: src = "0x94"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF33[\n]
out:  INT<4>	{[EXPR = [.LASF33(index: dc)]: src = ".LASF33"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x95[\n]
out:  INT<1>	{[EXPR = 95: src = "0x95"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB14[\n]
out:  INT<4>	{[EXPR = [.LFB14(index: 2b)]: src = ".LFB14"]}

in :  .long[\t].LFE14-.LFB14[\n]
out:  INT<4>	{[EXPR = cx[2e](0+[ident 2b:.LFE14]-[ident 2a:.LFB14]): src = ".LFE14-.LFB14"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x369[\n]
out:  INT<4>	{[EXPR = 369: src = "0x369"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x95[\n]
out:  INT<1>	{[EXPR = 95: src = "0x95"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"n"[\n]
out:  STR<1>	{[EXPR = "n": src = ""n""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x95[\n]
out:  INT<1>	{[EXPR = 95: src = "0x95"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF35[\n]
out:  INT<4>	{[EXPR = [.LASF35(index: dd)]: src = ".LASF35"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x97[\n]
out:  INT<1>	{[EXPR = 97: src = "0x97"]}

in :  .long[\t].LFB15[\n]
out:  INT<4>	{[EXPR = [.LFB15(index: 2e)]: src = ".LFB15"]}

in :  .long[\t].LFE15-.LFB15[\n]
out:  INT<4>	{[EXPR = cx[2f](0+[ident 2e:.LFE15]-[ident 2d:.LFB15]): src = ".LFE15-.LFB15"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x38b[\n]
out:  INT<4>	{[EXPR = 38b: src = "0x38b"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x97[\n]
out:  INT<1>	{[EXPR = 97: src = "0x97"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF36[\n]
out:  INT<4>	{[EXPR = [.LASF36(index: de)]: src = ".LASF36"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x98[\n]
out:  INT<1>	{[EXPR = 98: src = "0x98"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .long[\t].LFB16[\n]
out:  INT<4>	{[EXPR = [.LFB16(index: 31)]: src = ".LFB16"]}

in :  .long[\t].LFE16-.LFB16[\n]
out:  INT<4>	{[EXPR = cx[30](0+[ident 31:.LFE16]-[ident 30:.LFB16]): src = ".LFE16-.LFB16"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x3b1[\n]
out:  INT<4>	{[EXPR = 3b1: src = "0x3b1"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x98[\n]
out:  INT<1>	{[EXPR = 98: src = "0x98"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF37[\n]
out:  INT<4>	{[EXPR = [.LASF37(index: df)]: src = ".LASF37"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x99[\n]
out:  INT<1>	{[EXPR = 99: src = "0x99"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .long[\t].LFB17[\n]
out:  INT<4>	{[EXPR = [.LFB17(index: 34)]: src = ".LFB17"]}

in :  .long[\t].LFE17-.LFB17[\n]
out:  INT<4>	{[EXPR = cx[31](0+[ident 34:.LFE17]-[ident 33:.LFB17]): src = ".LFE17-.LFB17"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x3d7[\n]
out:  INT<4>	{[EXPR = 3d7: src = "0x3d7"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x99[\n]
out:  INT<1>	{[EXPR = 99: src = "0x99"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF38[\n]
out:  INT<4>	{[EXPR = [.LASF38(index: e0)]: src = ".LASF38"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9a[\n]
out:  INT<1>	{[EXPR = 9a: src = "0x9a"]}

in :  .long[\t].LFB18[\n]
out:  INT<4>	{[EXPR = [.LFB18(index: 37)]: src = ".LFB18"]}

in :  .long[\t].LFE18-.LFB18[\n]
out:  INT<4>	{[EXPR = cx[32](0+[ident 37:.LFE18]-[ident 36:.LFB18]): src = ".LFE18-.LFB18"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x405[\n]
out:  INT<4>	{[EXPR = 405: src = "0x405"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9a[\n]
out:  INT<1>	{[EXPR = 9a: src = "0x9a"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9a[\n]
out:  INT<1>	{[EXPR = 9a: src = "0x9a"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF39[\n]
out:  INT<4>	{[EXPR = [.LASF39(index: e1)]: src = ".LASF39"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9b[\n]
out:  INT<1>	{[EXPR = 9b: src = "0x9b"]}

in :  .long[\t].LFB19[\n]
out:  INT<4>	{[EXPR = [.LFB19(index: 3a)]: src = ".LFB19"]}

in :  .long[\t].LFE19-.LFB19[\n]
out:  INT<4>	{[EXPR = cx[33](0+[ident 3a:.LFE19]-[ident 39:.LFB19]): src = ".LFE19-.LFB19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x433[\n]
out:  INT<4>	{[EXPR = 433: src = "0x433"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9b[\n]
out:  INT<1>	{[EXPR = 9b: src = "0x9b"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9b[\n]
out:  INT<1>	{[EXPR = 9b: src = "0x9b"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .long[\t].LASF40[\n]
out:  INT<4>	{[EXPR = [.LASF40(index: e2)]: src = ".LASF40"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t].LFB20[\n]
out:  INT<4>	{[EXPR = [.LFB20(index: 3d)]: src = ".LFB20"]}

in :  .long[\t].LFE20-.LFB20[\n]
out:  INT<4>	{[EXPR = cx[34](0+[ident 3d:.LFE20]-[ident 3c:.LFB20]): src = ".LFE20-.LFB20"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x461[\n]
out:  INT<4>	{[EXPR = 461: src = "0x461"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -2[\n]
out:  SLEB128	{[EXPR = fffffffe: src = "-2"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF41[\n]
out:  INT<4>	{[EXPR = [.LASF41(index: e3)]: src = ".LASF41"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa0[\n]
out:  INT<1>	{[EXPR = a0: src = "0xa0"]}

in :  .long[\t].LFB21[\n]
out:  INT<4>	{[EXPR = [.LFB21(index: 40)]: src = ".LFB21"]}

in :  .long[\t].LFE21-.LFB21[\n]
out:  INT<4>	{[EXPR = cx[35](0+[ident 42:.LFE21]-[ident 3f:.LFB21]): src = ".LFE21-.LFB21"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x4a6[\n]
out:  INT<4>	{[EXPR = 4a6: src = "0x4a6"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa0[\n]
out:  INT<1>	{[EXPR = a0: src = "0xa0"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa0[\n]
out:  INT<1>	{[EXPR = a0: src = "0xa0"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB2[\n]
out:  INT<4>	{[EXPR = [.LBB2(index: 41)]: src = ".LBB2"]}

in :  .long[\t].LBE2-.LBB2[\n]
out:  INT<4>	{[EXPR = cx[36](0+[ident 41:.LBE2]-[ident 40:.LBB2]): src = ".LBE2-.LBB2"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa0[\n]
out:  INT<1>	{[EXPR = a0: src = "0xa0"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF42[\n]
out:  INT<4>	{[EXPR = [.LASF42(index: e4)]: src = ".LASF42"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa1[\n]
out:  INT<1>	{[EXPR = a1: src = "0xa1"]}

in :  .long[\t].LFB22[\n]
out:  INT<4>	{[EXPR = [.LFB22(index: 45)]: src = ".LFB22"]}

in :  .long[\t].LFE22-.LFB22[\n]
out:  INT<4>	{[EXPR = cx[37](0+[ident 47:.LFE22]-[ident 44:.LFB22]): src = ".LFE22-.LFB22"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x4eb[\n]
out:  INT<4>	{[EXPR = 4eb: src = "0x4eb"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa1[\n]
out:  INT<1>	{[EXPR = a1: src = "0xa1"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa1[\n]
out:  INT<1>	{[EXPR = a1: src = "0xa1"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB3[\n]
out:  INT<4>	{[EXPR = [.LBB3(index: 46)]: src = ".LBB3"]}

in :  .long[\t].LBE3-.LBB3[\n]
out:  INT<4>	{[EXPR = cx[38](0+[ident 46:.LBE3]-[ident 45:.LBB3]): src = ".LBE3-.LBB3"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa1[\n]
out:  INT<1>	{[EXPR = a1: src = "0xa1"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF43[\n]
out:  INT<4>	{[EXPR = [.LASF43(index: e5)]: src = ".LASF43"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa2[\n]
out:  INT<1>	{[EXPR = a2: src = "0xa2"]}

in :  .long[\t].LFB23[\n]
out:  INT<4>	{[EXPR = [.LFB23(index: 4a)]: src = ".LFB23"]}

in :  .long[\t].LFE23-.LFB23[\n]
out:  INT<4>	{[EXPR = cx[39](0+[ident 4c:.LFE23]-[ident 49:.LFB23]): src = ".LFE23-.LFB23"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x530[\n]
out:  INT<4>	{[EXPR = 530: src = "0x530"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa2[\n]
out:  INT<1>	{[EXPR = a2: src = "0xa2"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa2[\n]
out:  INT<1>	{[EXPR = a2: src = "0xa2"]}

in :  .long[\t]0x25[\n]
out:  INT<4>	{[EXPR = 25: src = "0x25"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 4[\n]
out:  SLEB128	{[EXPR = 4: src = "4"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB4[\n]
out:  INT<4>	{[EXPR = [.LBB4(index: 4b)]: src = ".LBB4"]}

in :  .long[\t].LBE4-.LBB4[\n]
out:  INT<4>	{[EXPR = cx[3a](0+[ident 4b:.LBE4]-[ident 4a:.LBB4]): src = ".LBE4-.LBB4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa2[\n]
out:  INT<1>	{[EXPR = a2: src = "0xa2"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF44[\n]
out:  INT<4>	{[EXPR = [.LASF44(index: e6)]: src = ".LASF44"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa4[\n]
out:  INT<1>	{[EXPR = a4: src = "0xa4"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .long[\t].LFB24[\n]
out:  INT<4>	{[EXPR = [.LFB24(index: 4f)]: src = ".LFB24"]}

in :  .long[\t].LFE24-.LFB24[\n]
out:  INT<4>	{[EXPR = cx[3b](0+[ident 51:.LFE24]-[ident 4e:.LFB24]): src = ".LFE24-.LFB24"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x579[\n]
out:  INT<4>	{[EXPR = 579: src = "0x579"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa4[\n]
out:  INT<1>	{[EXPR = a4: src = "0xa4"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB5[\n]
out:  INT<4>	{[EXPR = [.LBB5(index: 50)]: src = ".LBB5"]}

in :  .long[\t].LBE5-.LBB5[\n]
out:  INT<4>	{[EXPR = cx[3c](0+[ident 50:.LBE5]-[ident 4f:.LBB5]): src = ".LBE5-.LBB5"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa5[\n]
out:  INT<1>	{[EXPR = a5: src = "0xa5"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa5[\n]
out:  INT<1>	{[EXPR = a5: src = "0xa5"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -5[\n]
out:  SLEB128	{[EXPR = fffffffb: src = "-5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF45[\n]
out:  INT<4>	{[EXPR = [.LASF45(index: e7)]: src = ".LASF45"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa6[\n]
out:  INT<1>	{[EXPR = a6: src = "0xa6"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .long[\t].LFB25[\n]
out:  INT<4>	{[EXPR = [.LFB25(index: 54)]: src = ".LFB25"]}

in :  .long[\t].LFE25-.LFB25[\n]
out:  INT<4>	{[EXPR = cx[3d](0+[ident 56:.LFE25]-[ident 53:.LFB25]): src = ".LFE25-.LFB25"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x5c2[\n]
out:  INT<4>	{[EXPR = 5c2: src = "0x5c2"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa6[\n]
out:  INT<1>	{[EXPR = a6: src = "0xa6"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB6[\n]
out:  INT<4>	{[EXPR = [.LBB6(index: 55)]: src = ".LBB6"]}

in :  .long[\t].LBE6-.LBB6[\n]
out:  INT<4>	{[EXPR = cx[3e](0+[ident 55:.LBE6]-[ident 54:.LBB6]): src = ".LBE6-.LBB6"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa7[\n]
out:  INT<1>	{[EXPR = a7: src = "0xa7"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa7[\n]
out:  INT<1>	{[EXPR = a7: src = "0xa7"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF46[\n]
out:  INT<4>	{[EXPR = [.LASF46(index: e8)]: src = ".LASF46"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa8[\n]
out:  INT<1>	{[EXPR = a8: src = "0xa8"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .long[\t].LFB26[\n]
out:  INT<4>	{[EXPR = [.LFB26(index: 59)]: src = ".LFB26"]}

in :  .long[\t].LFE26-.LFB26[\n]
out:  INT<4>	{[EXPR = cx[3f](0+[ident 5b:.LFE26]-[ident 58:.LFB26]): src = ".LFE26-.LFB26"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa8[\n]
out:  INT<1>	{[EXPR = a8: src = "0xa8"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB7[\n]
out:  INT<4>	{[EXPR = [.LBB7(index: 5a)]: src = ".LBB7"]}

in :  .long[\t].LBE7-.LBB7[\n]
out:  INT<4>	{[EXPR = cx[40](0+[ident 5a:.LBE7]-[ident 59:.LBB7]): src = ".LBE7-.LBB7"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa9[\n]
out:  INT<1>	{[EXPR = a9: src = "0xa9"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xa9[\n]
out:  INT<1>	{[EXPR = a9: src = "0xa9"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -8[\n]
out:  SLEB128	{[EXPR = fffffff8: src = "-8"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .long[\t].LASF47[\n]
out:  INT<4>	{[EXPR = [.LASF47(index: e9)]: src = ".LASF47"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF48[\n]
out:  INT<4>	{[EXPR = [.LASF48(index: ea)]: src = ".LASF48"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xab[\n]
out:  INT<1>	{[EXPR = ab: src = "0xab"]}

in :  .long[\t].LFB27[\n]
out:  INT<4>	{[EXPR = [.LFB27(index: 5e)]: src = ".LFB27"]}

in :  .long[\t].LFE27-.LFB27[\n]
out:  INT<4>	{[EXPR = cx[41](0+[ident 60:.LFE27]-[ident 5d:.LFB27]): src = ".LFE27-.LFB27"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x657[\n]
out:  INT<4>	{[EXPR = 657: src = "0x657"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xab[\n]
out:  INT<1>	{[EXPR = ab: src = "0xab"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xab[\n]
out:  INT<1>	{[EXPR = ab: src = "0xab"]}

in :  .long[\t]0x62[\n]
out:  INT<4>	{[EXPR = 62: src = "0x62"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB8[\n]
out:  INT<4>	{[EXPR = [.LBB8(index: 5f)]: src = ".LBB8"]}

in :  .long[\t].LBE8-.LBB8[\n]
out:  INT<4>	{[EXPR = cx[42](0+[ident 5f:.LBE8]-[ident 5e:.LBB8]): src = ".LBE8-.LBB8"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xab[\n]
out:  INT<1>	{[EXPR = ab: src = "0xab"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF49[\n]
out:  INT<4>	{[EXPR = [.LASF49(index: eb)]: src = ".LASF49"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xac[\n]
out:  INT<1>	{[EXPR = ac: src = "0xac"]}

in :  .long[\t].LFB28[\n]
out:  INT<4>	{[EXPR = [.LFB28(index: 63)]: src = ".LFB28"]}

in :  .long[\t].LFE28-.LFB28[\n]
out:  INT<4>	{[EXPR = cx[43](0+[ident 65:.LFE28]-[ident 62:.LFB28]): src = ".LFE28-.LFB28"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x69c[\n]
out:  INT<4>	{[EXPR = 69c: src = "0x69c"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xac[\n]
out:  INT<1>	{[EXPR = ac: src = "0xac"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xac[\n]
out:  INT<1>	{[EXPR = ac: src = "0xac"]}

in :  .long[\t]0x155[\n]
out:  INT<4>	{[EXPR = 155: src = "0x155"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB9[\n]
out:  INT<4>	{[EXPR = [.LBB9(index: 64)]: src = ".LBB9"]}

in :  .long[\t].LBE9-.LBB9[\n]
out:  INT<4>	{[EXPR = cx[44](0+[ident 64:.LBE9]-[ident 63:.LBB9]): src = ".LBE9-.LBB9"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xac[\n]
out:  INT<1>	{[EXPR = ac: src = "0xac"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .long[\t].LASF50[\n]
out:  INT<4>	{[EXPR = [.LASF50(index: ec)]: src = ".LASF50"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xad[\n]
out:  INT<1>	{[EXPR = ad: src = "0xad"]}

in :  .long[\t].LFB29[\n]
out:  INT<4>	{[EXPR = [.LFB29(index: 68)]: src = ".LFB29"]}

in :  .long[\t].LFE29-.LFB29[\n]
out:  INT<4>	{[EXPR = cx[45](0+[ident 6a:.LFE29]-[ident 67:.LFB29]): src = ".LFE29-.LFB29"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x6e1[\n]
out:  INT<4>	{[EXPR = 6e1: src = "0x6e1"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xad[\n]
out:  INT<1>	{[EXPR = ad: src = "0xad"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xad[\n]
out:  INT<1>	{[EXPR = ad: src = "0xad"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 4[\n]
out:  SLEB128	{[EXPR = 4: src = "4"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB10[\n]
out:  INT<4>	{[EXPR = [.LBB10(index: 69)]: src = ".LBB10"]}

in :  .long[\t].LBE10-.LBB10[\n]
out:  INT<4>	{[EXPR = cx[46](0+[ident 69:.LBE10]-[ident 68:.LBB10]): src = ".LBE10-.LBB10"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xad[\n]
out:  INT<1>	{[EXPR = ad: src = "0xad"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF51[\n]
out:  INT<4>	{[EXPR = [.LASF51(index: ed)]: src = ".LASF51"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xaf[\n]
out:  INT<1>	{[EXPR = af: src = "0xaf"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .long[\t].LFB30[\n]
out:  INT<4>	{[EXPR = [.LFB30(index: 6d)]: src = ".LFB30"]}

in :  .long[\t].LFE30-.LFB30[\n]
out:  INT<4>	{[EXPR = cx[47](0+[ident 6f:.LFE30]-[ident 6c:.LFB30]): src = ".LFE30-.LFB30"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x72a[\n]
out:  INT<4>	{[EXPR = 72a: src = "0x72a"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xaf[\n]
out:  INT<1>	{[EXPR = af: src = "0xaf"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB11[\n]
out:  INT<4>	{[EXPR = [.LBB11(index: 6e)]: src = ".LBB11"]}

in :  .long[\t].LBE11-.LBB11[\n]
out:  INT<4>	{[EXPR = cx[48](0+[ident 6e:.LBE11]-[ident 6d:.LBB11]): src = ".LBE11-.LBB11"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb0[\n]
out:  INT<1>	{[EXPR = b0: src = "0xb0"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb0[\n]
out:  INT<1>	{[EXPR = b0: src = "0xb0"]}

in :  .long[\t]0x49[\n]
out:  INT<4>	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -5[\n]
out:  SLEB128	{[EXPR = fffffffb: src = "-5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF52[\n]
out:  INT<4>	{[EXPR = [.LASF52(index: ee)]: src = ".LASF52"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb1[\n]
out:  INT<1>	{[EXPR = b1: src = "0xb1"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .long[\t].LFB31[\n]
out:  INT<4>	{[EXPR = [.LFB31(index: 72)]: src = ".LFB31"]}

in :  .long[\t].LFE31-.LFB31[\n]
out:  INT<4>	{[EXPR = cx[49](0+[ident 74:.LFE31]-[ident 71:.LFB31]): src = ".LFE31-.LFB31"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x773[\n]
out:  INT<4>	{[EXPR = 773: src = "0x773"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb1[\n]
out:  INT<1>	{[EXPR = b1: src = "0xb1"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB12[\n]
out:  INT<4>	{[EXPR = [.LBB12(index: 73)]: src = ".LBB12"]}

in :  .long[\t].LBE12-.LBB12[\n]
out:  INT<4>	{[EXPR = cx[4a](0+[ident 73:.LBE12]-[ident 72:.LBB12]): src = ".LBE12-.LBB12"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb2[\n]
out:  INT<1>	{[EXPR = b2: src = "0xb2"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb2[\n]
out:  INT<1>	{[EXPR = b2: src = "0xb2"]}

in :  .long[\t]0x5b[\n]
out:  INT<4>	{[EXPR = 5b: src = "0x5b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -6[\n]
out:  SLEB128	{[EXPR = fffffffa: src = "-6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .long[\t].LASF53[\n]
out:  INT<4>	{[EXPR = [.LASF53(index: ef)]: src = ".LASF53"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb3[\n]
out:  INT<1>	{[EXPR = b3: src = "0xb3"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .long[\t].LFB32[\n]
out:  INT<4>	{[EXPR = [.LFB32(index: 77)]: src = ".LFB32"]}

in :  .long[\t].LFE32-.LFB32[\n]
out:  INT<4>	{[EXPR = cx[4b](0+[ident 79:.LFE32]-[ident 76:.LFB32]): src = ".LFE32-.LFB32"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x7bc[\n]
out:  INT<4>	{[EXPR = 7bc: src = "0x7bc"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb3[\n]
out:  INT<1>	{[EXPR = b3: src = "0xb3"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB13[\n]
out:  INT<4>	{[EXPR = [.LBB13(index: 78)]: src = ".LBB13"]}

in :  .long[\t].LBE13-.LBB13[\n]
out:  INT<4>	{[EXPR = cx[4c](0+[ident 78:.LBE13]-[ident 77:.LBB13]): src = ".LBE13-.LBB13"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"_p"[\n]
out:  STR<1>	{[EXPR = "_p": src = ""_p""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb4[\n]
out:  INT<1>	{[EXPR = b4: src = "0xb4"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .byte[\t]0xb4[\n]
out:  INT<1>	{[EXPR = b4: src = "0xb4"]}

in :  .long[\t]0x60b[\n]
out:  INT<4>	{[EXPR = 60b: src = "0x60b"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -8[\n]
out:  SLEB128	{[EXPR = fffffff8: src = "-8"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .long[\t].LASF54[\n]
out:  INT<4>	{[EXPR = [.LASF54(index: f0)]: src = ".LASF54"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t].LFB33[\n]
out:  INT<4>	{[EXPR = [.LFB33(index: 7c)]: src = ".LFB33"]}

in :  .long[\t].LFE33-.LFB33[\n]
out:  INT<4>	{[EXPR = cx[4d](0+[ident 7c:.LFE33]-[ident 7b:.LFB33]): src = ".LFE33-.LFB33"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x7ec[\n]
out:  INT<4>	{[EXPR = 7ec: src = "0x7ec"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x213[\n]
out:  INT<4>	{[EXPR = 213: src = "0x213"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"arg"[\n]
out:  STR<1>	{[EXPR = "arg": src = ""arg""]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 4[\n]
out:  SLEB128	{[EXPR = 4: src = "4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1c[\n]
out:  ULEB128	{[EXPR = 1c: src = "0x1c"]}

in :  .long[\t].LASF55[\n]
out:  INT<4>	{[EXPR = [.LASF55(index: f1)]: src = ".LASF55"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x21[\n]
out:  INT<1>	{[EXPR = 21: src = "0x21"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t].LFB34[\n]
out:  INT<4>	{[EXPR = [.LFB34(index: 80)]: src = ".LFB34"]}

in :  .long[\t].LFE34-.LFB34[\n]
out:  INT<4>	{[EXPR = cx[4e](0+[ident 86:.LFE34]-[ident 7f:.LFB34]): src = ".LFE34-.LFB34"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x853[\n]
out:  INT<4>	{[EXPR = 853: src = "0x853"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"c"[\n]
out:  STR<1>	{[EXPR = "c": src = ""c""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x21[\n]
out:  INT<1>	{[EXPR = 21: src = "0x21"]}

in :  .long[\t]0x2c[\n]
out:  INT<4>	{[EXPR = 2c: src = "0x2c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1d[\n]
out:  ULEB128	{[EXPR = 1d: src = "0x1d"]}

in :  .string[\t]"pi"[\n]
out:  STR<1>	{[EXPR = "pi": src = ""pi""]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x82f[\n]
out:  INT<4>	{[EXPR = 82f: src = "0x82f"]}

in :  .uleb128 0x1e[\n]
out:  ULEB128	{[EXPR = 1e: src = "0x1e"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .uleb128 0x1e[\n]
out:  ULEB128	{[EXPR = 1e: src = "0x1e"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"v"[\n]
out:  STR<1>	{[EXPR = "v": src = ""v""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x23[\n]
out:  INT<1>	{[EXPR = 23: src = "0x23"]}

in :  .long[\t]0x811[\n]
out:  INT<4>	{[EXPR = 811: src = "0x811"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB14[\n]
out:  INT<4>	{[EXPR = [.LBB14(index: 84)]: src = ".LBB14"]}

in :  .long[\t].LBE14-.LBB14[\n]
out:  INT<4>	{[EXPR = cx[4f](0+[ident 85:.LBE14]-[ident 83:.LBB14]): src = ".LBE14-.LBB14"]}

in :  .uleb128 0x1f[\n]
out:  ULEB128	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t].LASF58[\n]
out:  INT<4>	{[EXPR = [.LASF58(index: f2)]: src = ".LASF58"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x29[\n]
out:  INT<1>	{[EXPR = 29: src = "0x29"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .long[\t].LASF56[\n]
out:  INT<4>	{[EXPR = [.LASF56(index: f3)]: src = ".LASF56"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x2d[\n]
out:  INT<1>	{[EXPR = 2d: src = "0x2d"]}

in :  .long[\t].LFB35[\n]
out:  INT<4>	{[EXPR = [.LFB35(index: 89)]: src = ".LFB35"]}

in :  .long[\t].LFE35-.LFB35[\n]
out:  INT<4>	{[EXPR = cx[50](0+[ident 90:.LFE35]-[ident 88:.LFB35]): src = ".LFE35-.LFB35"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x88c[\n]
out:  INT<4>	{[EXPR = 88c: src = "0x88c"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x2d[\n]
out:  INT<1>	{[EXPR = 2d: src = "0x2d"]}

in :  .long[\t]0x88c[\n]
out:  INT<4>	{[EXPR = 88c: src = "0x88c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB15[\n]
out:  INT<4>	{[EXPR = [.LBB15(index: 8b)]: src = ".LBB15"]}

in :  .long[\t].LBE15-.LBB15[\n]
out:  INT<4>	{[EXPR = cx[51](0+[ident 8d:.LBE15]-[ident 8a:.LBB15]): src = ".LBE15-.LBB15"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"mb"[\n]
out:  STR<1>	{[EXPR = "mb": src = ""mb""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x30[\n]
out:  INT<1>	{[EXPR = 30: src = "0x30"]}

in :  .long[\t]0x15c[\n]
out:  INT<4>	{[EXPR = 15c: src = "0x15c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x62[\n]
out:  INT<4>	{[EXPR = 62: src = "0x62"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .long[\t].LASF57[\n]
out:  INT<4>	{[EXPR = [.LASF57(index: f4)]: src = ".LASF57"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x3b[\n]
out:  INT<1>	{[EXPR = 3b: src = "0x3b"]}

in :  .long[\t].LFB36[\n]
out:  INT<4>	{[EXPR = [.LFB36(index: 97)]: src = ".LFB36"]}

in :  .long[\t].LFE36-.LFB36[\n]
out:  INT<4>	{[EXPR = cx[52](0+[ident 98:.LFE36]-[ident 96:.LFB36]): src = ".LFE36-.LFB36"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x8c0[\n]
out:  INT<4>	{[EXPR = 8c0: src = "0x8c0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .string[\t]"p"[\n]
out:  STR<1>	{[EXPR = "p": src = ""p""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x3b[\n]
out:  INT<1>	{[EXPR = 3b: src = "0x3b"]}

in :  .long[\t]0x88c[\n]
out:  INT<4>	{[EXPR = 88c: src = "0x88c"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x91[\n]
out:  INT<1>	{[EXPR = 91: src = "0x91"]}

in :  .sleb128 0[\n]
out:  SLEB128	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"q"[\n]
out:  STR<1>	{[EXPR = "q": src = ""q""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x3d[\n]
out:  INT<1>	{[EXPR = 3d: src = "0x3d"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x20[\n]
out:  ULEB128	{[EXPR = 20: src = "0x20"]}

in :  .long[\t].LASF72[\n]
out:  INT<4>	{[EXPR = [.LASF72(index: f5)]: src = ".LASF72"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x4b[\n]
out:  INT<1>	{[EXPR = 4b: src = "0x4b"]}

in :  .long[\t].LFB37[\n]
out:  INT<4>	{[EXPR = [.LFB37(index: 9b)]: src = ".LFB37"]}

in :  .long[\t].LFE37-.LFB37[\n]
out:  INT<4>	{[EXPR = cx[53](0+[ident af:.LFE37]-[ident 9a:.LFB37]): src = ".LFE37-.LFB37"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x9c[\n]
out:  INT<1>	{[EXPR = 9c: src = "0x9c"]}

in :  .long[\t]0x93a[\n]
out:  INT<4>	{[EXPR = 93a: src = "0x93a"]}

in :  .uleb128 0x21[\n]
out:  ULEB128	{[EXPR = 21: src = "0x21"]}

in :  .long[\t].LASF73[\n]
out:  INT<4>	{[EXPR = [.LASF73(index: f6)]: src = ".LASF73"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x4d[\n]
out:  INT<1>	{[EXPR = 4d: src = "0x4d"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .long[\t]0x8e6[\n]
out:  INT<4>	{[EXPR = 8e6: src = "0x8e6"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .long[\t].LBB16[\n]
out:  INT<4>	{[EXPR = [.LBB16(index: 9e)]: src = ".LBB16"]}

in :  .long[\t].LBE16-.LBB16[\n]
out:  INT<4>	{[EXPR = cx[54](0+[ident ae:.LBE16]-[ident 9d:.LBB16]): src = ".LBE16-.LBB16"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"i"[\n]
out:  STR<1>	{[EXPR = "i": src = ""i""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x4f[\n]
out:  INT<1>	{[EXPR = 4f: src = "0x4f"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -4[\n]
out:  SLEB128	{[EXPR = fffffffc: src = "-4"]}

in :  .uleb128 0x22[\n]
out:  ULEB128	{[EXPR = 22: src = "0x22"]}

in :  .long[\t].LBB17[\n]
out:  INT<4>	{[EXPR = [.LBB17(index: a1)]: src = ".LBB17"]}

in :  .long[\t].LBE17-.LBB17[\n]
out:  INT<4>	{[EXPR = cx[55](0+[ident a5:.LBE17]-[ident a0:.LBB17]): src = ".LBE17-.LBB17"]}

in :  .long[\t]0x925[\n]
out:  INT<4>	{[EXPR = 925: src = "0x925"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .long[\t].LASF13[\n]
out:  INT<4>	{[EXPR = [.LASF13(index: c2)]: src = ".LASF13"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x54[\n]
out:  INT<1>	{[EXPR = 54: src = "0x54"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -8[\n]
out:  SLEB128	{[EXPR = fffffff8: src = "-8"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .string[\t]"arg"[\n]
out:  STR<1>	{[EXPR = "arg": src = ""arg""]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x55[\n]
out:  INT<1>	{[EXPR = 55: src = "0x55"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .byte[\t]0x7e[\n]
out:  INT<1>	{[EXPR = 7e: src = "0x7e"]}

in :  .sleb128 -12[\n]
out:  SLEB128	{[EXPR = fffffff4: src = "-12"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x23[\n]
out:  ULEB128	{[EXPR = 23: src = "0x23"]}

in :  .long[\t].Ldebug_ranges0+0[\n]
out:  INT<4>	{[EXPR = cx[56](0+[ident f6:.Ldebug_ranges0]): src = ".Ldebug_ranges0+0"]}

in :  .uleb128 0x1f[\n]
out:  ULEB128	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t].LASF59[\n]
out:  INT<4>	{[EXPR = [.LASF59(index: f8)]: src = ".LASF59"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x5e[\n]
out:  INT<1>	{[EXPR = 5e: src = "0x5e"]}

in :  .long[\t]0x76[\n]
out:  INT<4>	{[EXPR = 76: src = "0x76"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .long[\t].LASF74[\n]
out:  INT<4>	{[EXPR = [.LASF74(index: f9)]: src = ".LASF74"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .long[\t].LASF60[\n]
out:  INT<4>	{[EXPR = [.LASF60(index: fa)]: src = ".LASF60"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x1f[\n]
out:  INT<1>	{[EXPR = 1f: src = "0x1f"]}

in :  .long[\t]0x3e[\n]
out:  INT<4>	{[EXPR = 3e: src = "0x3e"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .long[\t]in_panic[\n]
out:  INT<4>	{[EXPR = [in_panic(index: 7e)]: src = "in_panic"]}

in :  .uleb128 0x25[\n]
out:  ULEB128	{[EXPR = 25: src = "0x25"]}

in :  .long[\t].LASF61[\n]
out:  INT<4>	{[EXPR = [.LASF61(index: fb)]: src = ".LASF61"]}

in :  .byte[\t]0x5[\n]
out:  INT<1>	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x38[\n]
out:  INT<1>	{[EXPR = 38: src = "0x38"]}

in :  .long[\t]0x88c[\n]
out:  INT<4>	{[EXPR = 88c: src = "0x88c"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0x3[\n]
out:  INT<1>	{[EXPR = 3: src = "0x3"]}

in :  .long[\t]panicstr[\n]
out:  INT<4>	{[EXPR = [panicstr(index: 92)]: src = "panicstr"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF62[\n]
out:  INT<4>	{[EXPR = [.LASF62(index: fc)]: src = ".LASF62"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .byte[\t]0x4b[\n]
out:  INT<1>	{[EXPR = 4b: src = "0x4b"]}

in :  .long[\t]0x96c[\n]
out:  INT<4>	{[EXPR = 96c: src = "0x96c"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x7f[\n]
out:  INT<4>	{[EXPR = 7f: src = "0x7f"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF63[\n]
out:  INT<4>	{[EXPR = [.LASF63(index: fd)]: src = ".LASF63"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .byte[\t]0x6d[\n]
out:  INT<1>	{[EXPR = 6d: src = "0x6d"]}

in :  .long[\t]0x37[\n]
out:  INT<4>	{[EXPR = 37: src = "0x37"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF64[\n]
out:  INT<4>	{[EXPR = [.LASF64(index: fe)]: src = ".LASF64"]}

in :  .byte[\t]0x7[\n]
out:  INT<1>	{[EXPR = 7: src = "0x7"]}

in :  .byte[\t]0x74[\n]
out:  INT<1>	{[EXPR = 74: src = "0x74"]}

in :  .long[\t]0x93a[\n]
out:  INT<4>	{[EXPR = 93a: src = "0x93a"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF65[\n]
out:  INT<4>	{[EXPR = [.LASF65(index: ff)]: src = ".LASF65"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x26[\n]
out:  INT<1>	{[EXPR = 26: src = "0x26"]}

in :  .long[\t]0x993[\n]
out:  INT<4>	{[EXPR = 993: src = "0x993"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF66[\n]
out:  INT<4>	{[EXPR = [.LASF66(index: 100)]: src = ".LASF66"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x26[\n]
out:  INT<1>	{[EXPR = 26: src = "0x26"]}

in :  .long[\t]0x993[\n]
out:  INT<4>	{[EXPR = 993: src = "0x993"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .long[\t]0x7d[\n]
out:  INT<4>	{[EXPR = 7d: src = "0x7d"]}

in :  .long[\t]0x9af[\n]
out:  INT<4>	{[EXPR = 9af: src = "0x9af"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .long[\t].LASF67[\n]
out:  INT<4>	{[EXPR = [.LASF67(index: 101)]: src = ".LASF67"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0x27[\n]
out:  INT<1>	{[EXPR = 27: src = "0x27"]}

in :  .long[\t]0x9a4[\n]
out:  INT<4>	{[EXPR = 9a4: src = "0x9a4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_abbrev,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_abbrev(index: 102)]: src = ".debug_abbrev"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_abbrev0:
out:  LABEL	[sym: b4 loc: 8ff]

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x25[\n]
out:  ULEB128	{[EXPR = 25: src = "0x25"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x10[\n]
out:  ULEB128	{[EXPR = 10: src = "0x10"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3e[\n]
out:  ULEB128	{[EXPR = 3e: src = "0x3e"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x4[\n]
out:  ULEB128	{[EXPR = 4: src = "0x4"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x7[\n]
out:  ULEB128	{[EXPR = 7: src = "0x7"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3e[\n]
out:  ULEB128	{[EXPR = 3e: src = "0x3e"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x9[\n]
out:  ULEB128	{[EXPR = 9: src = "0x9"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xa[\n]
out:  ULEB128	{[EXPR = a: src = "0xa"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x38[\n]
out:  ULEB128	{[EXPR = 38: src = "0x38"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x38[\n]
out:  ULEB128	{[EXPR = 38: src = "0x38"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xc[\n]
out:  ULEB128	{[EXPR = c: src = "0xc"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x21[\n]
out:  ULEB128	{[EXPR = 21: src = "0x21"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2f[\n]
out:  ULEB128	{[EXPR = 2f: src = "0x2f"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0xf[\n]
out:  ULEB128	{[EXPR = f: src = "0xf"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x10[\n]
out:  ULEB128	{[EXPR = 10: src = "0x10"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2117[\n]
out:  ULEB128	{[EXPR = 2117: src = "0x2117"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x87[\n]
out:  ULEB128	{[EXPR = 87: src = "0x87"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2116[\n]
out:  ULEB128	{[EXPR = 2116: src = "0x2116"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2116[\n]
out:  ULEB128	{[EXPR = 2116: src = "0x2116"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x14[\n]
out:  ULEB128	{[EXPR = 14: src = "0x14"]}

in :  .uleb128 0x5[\n]
out:  ULEB128	{[EXPR = 5: src = "0x5"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x15[\n]
out:  ULEB128	{[EXPR = 15: src = "0x15"]}

in :  .uleb128 0x34[\n]
out:  ULEB128	{[EXPR = 34: src = "0x34"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x16[\n]
out:  ULEB128	{[EXPR = 16: src = "0x16"]}

in :  .uleb128 0x34[\n]
out:  ULEB128	{[EXPR = 34: src = "0x34"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2116[\n]
out:  ULEB128	{[EXPR = 2116: src = "0x2116"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2117[\n]
out:  ULEB128	{[EXPR = 2117: src = "0x2117"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1a[\n]
out:  ULEB128	{[EXPR = 1a: src = "0x1a"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2117[\n]
out:  ULEB128	{[EXPR = 2117: src = "0x2117"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1b[\n]
out:  ULEB128	{[EXPR = 1b: src = "0x1b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1c[\n]
out:  ULEB128	{[EXPR = 1c: src = "0x1c"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2116[\n]
out:  ULEB128	{[EXPR = 2116: src = "0x2116"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1d[\n]
out:  ULEB128	{[EXPR = 1d: src = "0x1d"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1e[\n]
out:  ULEB128	{[EXPR = 1e: src = "0x1e"]}

in :  .uleb128 0xd[\n]
out:  ULEB128	{[EXPR = d: src = "0xd"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0x8[\n]
out:  ULEB128	{[EXPR = 8: src = "0x8"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x1f[\n]
out:  ULEB128	{[EXPR = 1f: src = "0x1f"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x3c[\n]
out:  ULEB128	{[EXPR = 3c: src = "0x3c"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x20[\n]
out:  ULEB128	{[EXPR = 20: src = "0x20"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x40[\n]
out:  ULEB128	{[EXPR = 40: src = "0x40"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .uleb128 0x2116[\n]
out:  ULEB128	{[EXPR = 2116: src = "0x2116"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x21[\n]
out:  ULEB128	{[EXPR = 21: src = "0x21"]}

in :  .uleb128 0x2e[\n]
out:  ULEB128	{[EXPR = 2e: src = "0x2e"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x3c[\n]
out:  ULEB128	{[EXPR = 3c: src = "0x3c"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x22[\n]
out:  ULEB128	{[EXPR = 22: src = "0x22"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x11[\n]
out:  ULEB128	{[EXPR = 11: src = "0x11"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x12[\n]
out:  ULEB128	{[EXPR = 12: src = "0x12"]}

in :  .uleb128 0x6[\n]
out:  ULEB128	{[EXPR = 6: src = "0x6"]}

in :  .uleb128 0x1[\n]
out:  ULEB128	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x23[\n]
out:  ULEB128	{[EXPR = 23: src = "0x23"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .byte[\t]0x1[\n]
out:  INT<1>	{[EXPR = 1: src = "0x1"]}

in :  .uleb128 0x55[\n]
out:  ULEB128	{[EXPR = 55: src = "0x55"]}

in :  .uleb128 0x17[\n]
out:  ULEB128	{[EXPR = 17: src = "0x17"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x24[\n]
out:  ULEB128	{[EXPR = 24: src = "0x24"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3c[\n]
out:  ULEB128	{[EXPR = 3c: src = "0x3c"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x25[\n]
out:  ULEB128	{[EXPR = 25: src = "0x25"]}

in :  .uleb128 0x34[\n]
out:  ULEB128	{[EXPR = 34: src = "0x34"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x2[\n]
out:  ULEB128	{[EXPR = 2: src = "0x2"]}

in :  .uleb128 0x18[\n]
out:  ULEB128	{[EXPR = 18: src = "0x18"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x26[\n]
out:  ULEB128	{[EXPR = 26: src = "0x26"]}

in :  .uleb128 0x34[\n]
out:  ULEB128	{[EXPR = 34: src = "0x34"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x3[\n]
out:  ULEB128	{[EXPR = 3: src = "0x3"]}

in :  .uleb128 0xe[\n]
out:  ULEB128	{[EXPR = e: src = "0xe"]}

in :  .uleb128 0x3a[\n]
out:  ULEB128	{[EXPR = 3a: src = "0x3a"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x3b[\n]
out:  ULEB128	{[EXPR = 3b: src = "0x3b"]}

in :  .uleb128 0xb[\n]
out:  ULEB128	{[EXPR = b: src = "0xb"]}

in :  .uleb128 0x49[\n]
out:  ULEB128	{[EXPR = 49: src = "0x49"]}

in :  .uleb128 0x13[\n]
out:  ULEB128	{[EXPR = 13: src = "0x13"]}

in :  .uleb128 0x3f[\n]
out:  ULEB128	{[EXPR = 3f: src = "0x3f"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .uleb128 0x3c[\n]
out:  ULEB128	{[EXPR = 3c: src = "0x3c"]}

in :  .uleb128 0x19[\n]
out:  ULEB128	{[EXPR = 19: src = "0x19"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .uleb128 0x27[\n]
out:  ULEB128	{[EXPR = 27: src = "0x27"]}

in :  .uleb128 0x21[\n]
out:  ULEB128	{[EXPR = 21: src = "0x21"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_aranges,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_aranges(index: 103)]: src = ".debug_aranges"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .long[\t]0x1c[\n]
out:  INT<4>	{[EXPR = 1c: src = "0x1c"]}

in :  .word[\t]0x2[\n]
out:  INT<2>	{[EXPR = 2: src = "0x2"]}

in :  .long[\t].Ldebug_info0[\n]
out:  INT<4>	{[EXPR = [.Ldebug_info0(index: b3)]: src = ".Ldebug_info0"]}

in :  .byte[\t]0x4[\n]
out:  INT<1>	{[EXPR = 4: src = "0x4"]}

in :  .byte[\t]0[\n]
out:  INT<1>	{[EXPR = 0: src = "0"]}

in :  .word[\t]0[\n]
out:  INT<2>	{[EXPR = 0: src = "0"]}

in :  .word[\t]0[\n]
out:  INT<2>	{[EXPR = 0: src = "0"]}

in :  .long[\t].Ltext0[\n]
out:  INT<4>	{[EXPR = [.Ltext0(index: 1)]: src = ".Ltext0"]}

in :  .long[\t].Letext0-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[57](0+[ident b0:.Letext0]-[ident 0:.Ltext0]): src = ".Letext0-.Ltext0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_ranges,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_ranges(index: 104)]: src = ".debug_ranges"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_ranges0:
out:  LABEL	[sym: f7 loc: ee0]

in :  .long[\t].LBB18-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[58](0+[ident a8:.LBB18]-[ident 0:.Ltext0]): src = ".LBB18-.Ltext0"]}

in :  .long[\t].LBE18-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[59](0+[ident ab:.LBE18]-[ident 0:.Ltext0]): src = ".LBE18-.Ltext0"]}

in :  .long[\t].LBB19-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[5a](0+[ident ac:.LBB19]-[ident 0:.Ltext0]): src = ".LBB19-.Ltext0"]}

in :  .long[\t].LBE19-.Ltext0[\n]
out:  INT<4>	{[EXPR = cx[5b](0+[ident ad:.LBE19]-[ident 0:.Ltext0]): src = ".LBE19-.Ltext0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .long[\t]0[\n]
out:  INT<4>	{[EXPR = 0: src = "0"]}

in :  .section[\t].debug_line,"",@progbits[\n]
out:  SEG	{[EXPR = [.debug_line(index: 105)]: src = ".debug_line"], [EXPR = "": src = """"], [@IDENT: src = "@progbits"]}

in :  .Ldebug_line0:
out:  LABEL	[sym: b8 loc: 910]

in :  .section[\t].debug_str,"MS",@progbits,1[\n]
out:  SEG	{[EXPR = [.debug_str(index: 106)]: src = ".debug_str"], [EXPR = "MS": src = ""MS""], [@IDENT: src = "@progbits"], [EXPR = 1: src = "1"]}

in :  .LASF25:
out:  LABEL	[sym: d2 loc: 9f6]

in :  .string[\t]"limit"[\n]
out:  STR<1>	{[EXPR = "limit": src = ""limit""]}

in :  .LASF16:
out:  LABEL	[sym: c9 loc: 98f]

in :  .string[\t]"mbuf_hdr"[\n]
out:  STR<1>	{[EXPR = "mbuf_hdr": src = ""mbuf_hdr""]}

in :  .LASF62:
out:  LABEL	[sym: fc loc: f06]

in :  .string[\t]"console_out"[\n]
out:  STR<1>	{[EXPR = "console_out": src = ""console_out""]}

in :  .LASF31:
out:  LABEL	[sym: da loc: abc]

in :  .string[\t]"mb_room"[\n]
out:  STR<1>	{[EXPR = "mb_room": src = ""mb_room""]}

in :  .LASF23:
out:  LABEL	[sym: d0 loc: 9c9]

in :  .string[\t]"short int"[\n]
out:  STR<1>	{[EXPR = "short int": src = ""short int""]}

in :  .LASF24:
out:  LABEL	[sym: d1 loc: 9d8]

in :  .string[\t]"sizetype"[\n]
out:  STR<1>	{[EXPR = "sizetype": src = ""sizetype""]}

in :  .LASF55:
out:  LABEL	[sym: f1 loc: e16]

in :  .string[\t]"putchar"[\n]
out:  STR<1>	{[EXPR = "putchar": src = ""putchar""]}

in :  .LASF61:
out:  LABEL	[sym: fb loc: efc]

in :  .string[\t]"panicstr"[\n]
out:  STR<1>	{[EXPR = "panicstr": src = ""panicstr""]}

in :  .LASF41:
out:  LABEL	[sym: e3 loc: bb8]

in :  .string[\t]"mb_putc"[\n]
out:  STR<1>	{[EXPR = "mb_putc": src = ""mb_putc""]}

in :  .LASF57:
out:  LABEL	[sym: f4 loc: e81]

in :  .string[\t]"panic"[\n]
out:  STR<1>	{[EXPR = "panic": src = ""panic""]}

in :  .LASF5:
out:  LABEL	[sym: be loc: 92e]

in :  .string[\t]"u_short"[\n]
out:  STR<1>	{[EXPR = "u_short": src = ""u_short""]}

in :  .LASF43:
out:  LABEL	[sym: e5 loc: c16]

in :  .string[\t]"mb_putl"[\n]
out:  STR<1>	{[EXPR = "mb_putl": src = ""mb_putl""]}

in :  .LASF38:
out:  LABEL	[sym: e0 loc: b5b]

in :  .string[\t]"mb_skip"[\n]
out:  STR<1>	{[EXPR = "mb_skip": src = ""mb_skip""]}

in :  .LASF14:
out:  LABEL	[sym: c7 loc: 97a]

in :  .string[\t]"mbuf"[\n]
out:  STR<1>	{[EXPR = "mbuf": src = ""mbuf""]}

in :  .LASF35:
out:  LABEL	[sym: dd loc: b14]

in :  .string[\t]"mb_top"[\n]
out:  STR<1>	{[EXPR = "mb_top": src = ""mb_top""]}

in :  .LASF18:
out:  LABEL	[sym: cb loc: 99d]

in :  .string[\t]"head"[\n]
out:  STR<1>	{[EXPR = "head": src = ""head""]}

in :  .LASF11:
out:  LABEL	[sym: c5 loc: 96c]

in :  .string[\t]"unit"[\n]
out:  STR<1>	{[EXPR = "unit": src = ""unit""]}

in :  .LASF56:
out:  LABEL	[sym: f3 loc: e57]

in :  .string[\t]"puts"[\n]
out:  STR<1>	{[EXPR = "puts": src = ""puts""]}

in :  .LASF8:
out:  LABEL	[sym: c1 loc: 94b]

in :  .string[\t]"PROC"[\n]
out:  STR<1>	{[EXPR = "PROC": src = ""PROC""]}

in :  .LASF28:
out:  LABEL	[sym: d7 loc: a74]

in :  .string[\t]"mb_get_links"[\n]
out:  STR<1>	{[EXPR = "mb_get_links": src = ""mb_get_links""]}

in :  .LASF29:
out:  LABEL	[sym: d8 loc: a8c]

in :  .string[\t]"mb_empty"[\n]
out:  STR<1>	{[EXPR = "mb_empty": src = ""mb_empty""]}

in :  .LASF32:
out:  LABEL	[sym: db loc: adc]

in :  .string[\t]"mb_left"[\n]
out:  STR<1>	{[EXPR = "mb_left": src = ""mb_left""]}

in :  .LASF39:
out:  LABEL	[sym: e1 loc: b7a]

in :  .string[\t]"mb_tadv"[\n]
out:  STR<1>	{[EXPR = "mb_tadv": src = ""mb_tadv""]}

in :  .LASF3:
out:  LABEL	[sym: bc loc: 923]

in :  .string[\t]"u_char"[\n]
out:  STR<1>	{[EXPR = "u_char": src = ""u_char""]}

in :  .LASF59:
out:  LABEL	[sym: f8 loc: ee4]

in :  .string[\t]"atx_idle"[\n]
out:  STR<1>	{[EXPR = "atx_idle": src = ""atx_idle""]}

in :  .LASF54:
out:  LABEL	[sym: f0 loc: df7]

in :  .string[\t]"exec"[\n]
out:  STR<1>	{[EXPR = "exec": src = ""exec""]}

in :  .LASF70:
out:  LABEL	[sym: b7 loc: 908]

in :  .string[\t]"/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos"[\n]
out:  STR<1>	{[EXPR = "/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos": src = ""/Users/kent/Desktop/tfd/toll.src/smn/src.m68k/caos""]}

in :  .LASF73:
out:  LABEL	[sym: f6 loc: eae]

in :  .string[\t]"__display_current_proc"[\n]
out:  STR<1>	{[EXPR = "__display_current_proc": src = ""__display_current_proc""]}

in :  .LASF42:
out:  LABEL	[sym: e4 loc: be7]

in :  .string[\t]"mb_putw"[\n]
out:  STR<1>	{[EXPR = "mb_putw": src = ""mb_putw""]}

in :  .LASF47:
out:  LABEL	[sym: e9 loc: cd7]

in :  .string[\t]"long int"[\n]
out:  STR<1>	{[EXPR = "long int": src = ""long int""]}

in :  .LASF33:
out:  LABEL	[sym: dc loc: af4]

in :  .string[\t]"mb_hroom"[\n]
out:  STR<1>	{[EXPR = "mb_hroom": src = ""mb_hroom""]}

in :  .LASF9:
out:  LABEL	[sym: c3 loc: 95e]

in :  .string[\t]"frame"[\n]
out:  STR<1>	{[EXPR = "frame": src = ""frame""]}

in :  .LASF20:
out:  LABEL	[sym: cd loc: 9b1]

in :  .string[\t]"links"[\n]
out:  STR<1>	{[EXPR = "links": src = ""links""]}

in :  .LASF68:
out:  LABEL	[sym: b5 loc: 903]

in :  .string[\t]"GNU C11 5.4.0 -mcpu=68020 -g"[\n]
out:  STR<1>	{[EXPR = "GNU C11 5.4.0 -mcpu=68020 -g": src = ""GNU C11 5.4.0 -mcpu=68020 -g""]}

in :  .LASF22:
out:  LABEL	[sym: cf loc: 9bf]

in :  .string[\t]"queue"[\n]
out:  STR<1>	{[EXPR = "queue": src = ""queue""]}

in :  .LASF30:
out:  LABEL	[sym: d9 loc: aa4]

in :  .string[\t]"mb_len"[\n]
out:  STR<1>	{[EXPR = "mb_len": src = ""mb_len""]}

in :  .LASF17:
out:  LABEL	[sym: ca loc: 996]

in :  .string[\t]"tail"[\n]
out:  STR<1>	{[EXPR = "tail": src = ""tail""]}

in :  .LASF4:
out:  LABEL	[sym: bd loc: 92b]

in :  .string[\t]"unsigned char"[\n]
out:  STR<1>	{[EXPR = "unsigned char": src = ""unsigned char""]}

in :  .LASF63:
out:  LABEL	[sym: fd loc: f0f]

in :  .string[\t]"console_dbug_flags"[\n]
out:  STR<1>	{[EXPR = "console_dbug_flags": src = ""console_dbug_flags""]}

in :  .LASF71:
out:  LABEL	[sym: d3 loc: a00]

in :  .string[\t]"abort"[\n]
out:  STR<1>	{[EXPR = "abort": src = ""abort""]}

in :  .LASF13:
out:  LABEL	[sym: c2 loc: 951]

in :  .string[\t]"proc"[\n]
out:  STR<1>	{[EXPR = "proc": src = ""proc""]}

in :  .LASF19:
out:  LABEL	[sym: cc loc: 9aa]

in :  .string[\t]"type"[\n]
out:  STR<1>	{[EXPR = "type": src = ""type""]}

in :  .LASF1:
out:  LABEL	[sym: bb loc: 920]

in :  .string[\t]"unsigned int"[\n]
out:  STR<1>	{[EXPR = "unsigned int": src = ""unsigned int""]}

in :  .LASF66:
out:  LABEL	[sym: 100 loc: f24]

in :  .string[\t]"sys_queue_tail"[\n]
out:  STR<1>	{[EXPR = "sys_queue_tail": src = ""sys_queue_tail""]}

in :  .LASF40:
out:  LABEL	[sym: e2 loc: b99]

in :  .string[\t]"mb_flush"[\n]
out:  STR<1>	{[EXPR = "mb_flush": src = ""mb_flush""]}

in :  .LASF58:
out:  LABEL	[sym: f2 loc: e4d]

in :  .string[\t]"putConsoleChar"[\n]
out:  STR<1>	{[EXPR = "putConsoleChar": src = ""putConsoleChar""]}

in :  .LASF48:
out:  LABEL	[sym: ea loc: cda]

in :  .string[\t]"mb_pushc"[\n]
out:  STR<1>	{[EXPR = "mb_pushc": src = ""mb_pushc""]}

in :  .LASF6:
out:  LABEL	[sym: bf loc: 936]

in :  .string[\t]"short unsigned int"[\n]
out:  STR<1>	{[EXPR = "short unsigned int": src = ""short unsigned int""]}

in :  .LASF50:
out:  LABEL	[sym: ec loc: d38]

in :  .string[\t]"mb_pushl"[\n]
out:  STR<1>	{[EXPR = "mb_pushl": src = ""mb_pushl""]}

in :  .LASF7:
out:  LABEL	[sym: c0 loc: 93b]

in :  .string[\t]"char"[\n]
out:  STR<1>	{[EXPR = "char": src = ""char""]}

in :  .LASF44:
out:  LABEL	[sym: e6 loc: c45]

in :  .string[\t]"mb_getc"[\n]
out:  STR<1>	{[EXPR = "mb_getc": src = ""mb_getc""]}

in :  .LASF49:
out:  LABEL	[sym: eb loc: d09]

in :  .string[\t]"mb_pushw"[\n]
out:  STR<1>	{[EXPR = "mb_pushw": src = ""mb_pushw""]}

in :  .LASF46:
out:  LABEL	[sym: e8 loc: ca5]

in :  .string[\t]"mb_getl"[\n]
out:  STR<1>	{[EXPR = "mb_getl": src = ""mb_getl""]}

in :  .LASF36:
out:  LABEL	[sym: de loc: b2b]

in :  .string[\t]"mb_hptr"[\n]
out:  STR<1>	{[EXPR = "mb_hptr": src = ""mb_hptr""]}

in :  .LASF69:
out:  LABEL	[sym: b6 loc: 906]

in :  .string[\t]"putchar.c"[\n]
out:  STR<1>	{[EXPR = "putchar.c": src = ""putchar.c""]}

in :  .LASF15:
out:  LABEL	[sym: c8 loc: 987]

in :  .string[\t]"data"[\n]
out:  STR<1>	{[EXPR = "data": src = ""data""]}

in :  .LASF45:
out:  LABEL	[sym: e7 loc: c75]

in :  .string[\t]"mb_getw"[\n]
out:  STR<1>	{[EXPR = "mb_getw": src = ""mb_getw""]}

in :  .LASF0:
out:  LABEL	[sym: b9 loc: 915]

in :  .string[\t]"long unsigned int"[\n]
out:  STR<1>	{[EXPR = "long unsigned int": src = ""long unsigned int""]}

in :  .LASF74:
out:  LABEL	[sym: f9 loc: eef]

in :  .string[\t]"clock"[\n]
out:  STR<1>	{[EXPR = "clock": src = ""clock""]}

in :  .LASF51:
out:  LABEL	[sym: ed loc: d67]

in :  .string[\t]"mb_popc"[\n]
out:  STR<1>	{[EXPR = "mb_popc": src = ""mb_popc""]}

in :  .LASF60:
out:  LABEL	[sym: fa loc: ef2]

in :  .string[\t]"in_panic"[\n]
out:  STR<1>	{[EXPR = "in_panic": src = ""in_panic""]}

in :  .LASF53:
out:  LABEL	[sym: ef loc: dc7]

in :  .string[\t]"mb_popl"[\n]
out:  STR<1>	{[EXPR = "mb_popl": src = ""mb_popl""]}

in :  .LASF37:
out:  LABEL	[sym: df loc: b43]

in :  .string[\t]"mb_tptr"[\n]
out:  STR<1>	{[EXPR = "mb_tptr": src = ""mb_tptr""]}

in :  .LASF65:
out:  LABEL	[sym: ff loc: f1b]

in :  .string[\t]"sys_queue_head"[\n]
out:  STR<1>	{[EXPR = "sys_queue_head": src = ""sys_queue_head""]}

in :  .LASF67:
out:  LABEL	[sym: 101 loc: f2f]

in :  .string[\t]"sys_queue_table"[\n]
out:  STR<1>	{[EXPR = "sys_queue_table": src = ""sys_queue_table""]}

in :  .LASF52:
out:  LABEL	[sym: ee loc: d97]

in :  .string[\t]"mb_popw"[\n]
out:  STR<1>	{[EXPR = "mb_popw": src = ""mb_popw""]}

in :  .LASF72:
out:  LABEL	[sym: f5 loc: ea0]

in :  .string[\t]"abort_supv"[\n]
out:  STR<1>	{[EXPR = "abort_supv": src = ""abort_supv""]}

in :  .LASF2:
out:  LABEL	[sym: ba loc: 918]

in :  .string[\t]"u_int"[\n]
out:  STR<1>	{[EXPR = "u_int": src = ""u_int""]}

in :  .LASF34:
out:  LABEL	[sym: d5 loc: a45]

in :  .string[\t]"mb_free"[\n]
out:  STR<1>	{[EXPR = "mb_free": src = ""mb_free""]}

in :  .LASF26:
out:  LABEL	[sym: d4 loc: a33]

in :  .string[\t]"_arg"[\n]
out:  STR<1>	{[EXPR = "_arg": src = ""_arg""]}

in :  .LASF27:
out:  LABEL	[sym: d6 loc: a5c]

in :  .string[\t]"mb_link"[\n]
out:  STR<1>	{[EXPR = "mb_link": src = ""mb_link""]}

in :  .LASF64:
out:  LABEL	[sym: fe loc: f15]

in :  .string[\t]"up_time"[\n]
out:  STR<1>	{[EXPR = "up_time": src = ""up_time""]}

in :  .LASF12:
out:  LABEL	[sym: c6 loc: 974]

in :  .string[\t]"MBUF"[\n]
out:  STR<1>	{[EXPR = "MBUF": src = ""MBUF""]}

in :  .LASF21:
out:  LABEL	[sym: ce loc: 9b8]

in :  .string[\t]"next"[\n]
out:  STR<1>	{[EXPR = "next": src = ""next""]}

in :  .LASF10:
out:  LABEL	[sym: c4 loc: 965]

in :  .string[\t]"desc"[\n]
out:  STR<1>	{[EXPR = "desc": src = ""desc""]}

in :  .ident[\t]"GCC: (GNU) 5.4.0"[\n]
out:  IDENT	{[EXPR = "GCC: (GNU) 5.4.0": src = ""GCC: (GNU) 5.4.0""]}

in :  
out:  EOI	

symbols:
   0: .Ltext0             U : *undef*
   1: .debug_frame        T : *undef*
   2: chk                 U : *undef*
   3: .LFB0               U : *undef*
   4: .LFE0               U : *undef*
   5: abort               U : *undef*
   6: STT_FUNC            T : *undef*
   7: .LFB2               U : *undef*
   8: __no_return         U : *undef*
   9: .LFE2               U : *undef*
  10: queue               U : *undef*
  11: .LFB5               U : *undef*
  12: .L4                 U : *undef*
  13: is_stmt             T : *undef*
  14: discriminator       T : *undef*
  15: .L5                 U : *undef*
  16: .LFE5               U : *undef*
  17: mb_free             U : *undef*
  18: .LFB7               U : *undef*
  19: .L7                 U : *undef*
  20: .L9                 U : *undef*
  21: _mb_unlink          U : *undef*
  22: .LFE7               U : *undef*
  23: mb_link             U : *undef*
  24: .LFB8               U : *undef*
  25: .LFE8               U : *undef*
  26: mb_get_links        U : *undef*
  27: .LFB9               U : *undef*
  28: .LFE9               U : *undef*
  29: mb_empty            U : *undef*
  30: .LFB10              U : *undef*
  31: .LFE10              U : *undef*
  32: mb_len              U : *undef*
  33: .LFB11              U : *undef*
  34: .LFE11              U : *undef*
  35: mb_room             U : *undef*
  36: .LFB12              U : *undef*
  37: .LFE12              U : *undef*
  38: mb_left             U : *undef*
  39: .LFB13              U : *undef*
  40: .LFE13              U : *undef*
  41: mb_hroom            U : *undef*
  42: .LFB14              U : *undef*
  43: .LFE14              U : *undef*
  44: mb_top              U : *undef*
  45: .LFB15              U : *undef*
  46: .LFE15              U : *undef*
  47: mb_hptr             U : *undef*
  48: .LFB16              U : *undef*
  49: .LFE16              U : *undef*
  50: mb_tptr             U : *undef*
  51: .LFB17              U : *undef*
  52: .LFE17              U : *undef*
  53: mb_skip             U : *undef*
  54: .LFB18              U : *undef*
  55: .LFE18              U : *undef*
  56: mb_tadv             U : *undef*
  57: .LFB19              U : *undef*
  58: .LFE19              U : *undef*
  59: mb_flush            U : *undef*
  60: .LFB20              U : *undef*
  61: .LFE20              U : *undef*
  62: mb_putc             U : *undef*
  63: .LFB21              U : *undef*
  64: .LBB2               U : *undef*
  65: .LBE2               U : *undef*
  66: .LFE21              U : *undef*
  67: mb_putw             U : *undef*
  68: .LFB22              U : *undef*
  69: .LBB3               U : *undef*
  70: .LBE3               U : *undef*
  71: .LFE22              U : *undef*
  72: mb_putl             U : *undef*
  73: .LFB23              U : *undef*
  74: .LBB4               U : *undef*
  75: .LBE4               U : *undef*
  76: .LFE23              U : *undef*
  77: mb_getc             U : *undef*
  78: .LFB24              U : *undef*
  79: .LBB5               U : *undef*
  80: .LBE5               U : *undef*
  81: .LFE24              U : *undef*
  82: mb_getw             U : *undef*
  83: .LFB25              U : *undef*
  84: .LBB6               U : *undef*
  85: .LBE6               U : *undef*
  86: .LFE25              U : *undef*
  87: mb_getl             U : *undef*
  88: .LFB26              U : *undef*
  89: .LBB7               U : *undef*
  90: .LBE7               U : *undef*
  91: .LFE26              U : *undef*
  92: mb_pushc            U : *undef*
  93: .LFB27              U : *undef*
  94: .LBB8               U : *undef*
  95: .LBE8               U : *undef*
  96: .LFE27              U : *undef*
  97: mb_pushw            U : *undef*
  98: .LFB28              U : *undef*
  99: .LBB9               U : *undef*
 100: .LBE9               U : *undef*
 101: .LFE28              U : *undef*
 102: mb_pushl            U : *undef*
 103: .LFB29              U : *undef*
 104: .LBB10              U : *undef*
 105: .LBE10              U : *undef*
 106: .LFE29              U : *undef*
 107: mb_popc             U : *undef*
 108: .LFB30              U : *undef*
 109: .LBB11              U : *undef*
 110: .LBE11              U : *undef*
 111: .LFE30              U : *undef*
 112: mb_popw             U : *undef*
 113: .LFB31              U : *undef*
 114: .LBB12              U : *undef*
 115: .LBE12              U : *undef*
 116: .LFE31              U : *undef*
 117: mb_popl             U : *undef*
 118: .LFB32              U : *undef*
 119: .LBB13              U : *undef*
 120: .LBE13              U : *undef*
 121: .LFE32              U : *undef*
 122: exec                U : *undef*
 123: .LFB33              U : *undef*
 124: .LFE33              U : *undef*
 125: in_panic            T : *undef*
 126: putchar             U : *undef*
 127: .LFB34              U : *undef*
 128: console_out         U : *undef*
 129: .L52                U : *undef*
 130: .L53                U : *undef*
 131: .LBB14              U : *undef*
 132: putConsoleChar      U : *undef*
 133: .LBE14              U : *undef*
 134: .LFE34              U : *undef*
 135: puts                U : *undef*
 136: .LFB35              U : *undef*
 137: .L57                U : *undef*
 138: .LBB15              U : *undef*
 139: mb_alloc            U : *undef*
 140: mb_stradd           U : *undef*
 141: .LBE15              U : *undef*
 142: .L59                U : *undef*
 143: .L58                U : *undef*
 144: .LFE35              U : *undef*
 145: panicstr            U : *undef*
 146: .rodata             T : *undef*
 147: .LC0                U : *undef*
 148: .LC1                U : *undef*
 149: panic               U : *undef*
 150: .LFB36              U : *undef*
 151: .L64                U : *undef*
 152: .LFE36              U : *undef*
 153: abort_supv          U : *undef*
 154: .LFB37              U : *undef*
 155: __display_current_procU : *undef*
 156: .L66                U : *undef*
 157: .LBB16              U : *undef*
 158: .L67                U : *undef*
 159: .L69                U : *undef*
 160: .LBB17              U : *undef*
 161: sys_queue_head      U : *undef*
 162: .L68                U : *undef*
 163: sys_queue_tail      U : *undef*
 164: sys_queue_table     U : *undef*
 165: .LBE17              U : *undef*
 166: .L70                U : *undef*
 167: .L71                U : *undef*
 168: .LBB18              U : *undef*
 169: atx_idle            U : *undef*
 170: .L72                U : *undef*
 171: .LBE18              U : *undef*
 172: .LBB19              U : *undef*
 173: .LBE19              U : *undef*
 174: .LBE16              U : *undef*
 175: .LFE37              U : *undef*
 176: .Letext0            U : *undef*
 177: .debug_info         T : *undef*
 178: .Ldebug_info0       T : *undef*
 179: .Ldebug_abbrev0     T : *undef*
 180: .LASF68             T : *undef*
 181: .LASF69             T : *undef*
 182: .LASF70             T : *undef*
 183: .Ldebug_line0       T : *undef*
 184: .LASF0              T : *undef*
 185: .LASF2              T : *undef*
 186: .LASF1              T : *undef*
 187: .LASF3              T : *undef*
 188: .LASF4              T : *undef*
 189: .LASF5              T : *undef*
 190: .LASF6              T : *undef*
 191: .LASF7              T : *undef*
 192: .LASF8              T : *undef*
 193: .LASF13             T : *undef*
 194: .LASF9              T : *undef*
 195: .LASF10             T : *undef*
 196: .LASF11             T : *undef*
 197: .LASF12             T : *undef*
 198: .LASF14             T : *undef*
 199: .LASF15             T : *undef*
 200: .LASF16             T : *undef*
 201: .LASF17             T : *undef*
 202: .LASF18             T : *undef*
 203: .LASF19             T : *undef*
 204: .LASF20             T : *undef*
 205: .LASF21             T : *undef*
 206: .LASF22             T : *undef*
 207: .LASF23             T : *undef*
 208: .LASF24             T : *undef*
 209: .LASF25             T : *undef*
 210: .LASF71             T : *undef*
 211: .LASF26             T : *undef*
 212: .LASF34             T : *undef*
 213: .LASF27             T : *undef*
 214: .LASF28             T : *undef*
 215: .LASF29             T : *undef*
 216: .LASF30             T : *undef*
 217: .LASF31             T : *undef*
 218: .LASF32             T : *undef*
 219: .LASF33             T : *undef*
 220: .LASF35             T : *undef*
 221: .LASF36             T : *undef*
 222: .LASF37             T : *undef*
 223: .LASF38             T : *undef*
 224: .LASF39             T : *undef*
 225: .LASF40             T : *undef*
 226: .LASF41             T : *undef*
 227: .LASF42             T : *undef*
 228: .LASF43             T : *undef*
 229: .LASF44             T : *undef*
 230: .LASF45             T : *undef*
 231: .LASF46             T : *undef*
 232: .LASF47             T : *undef*
 233: .LASF48             T : *undef*
 234: .LASF49             T : *undef*
 235: .LASF50             T : *undef*
 236: .LASF51             T : *undef*
 237: .LASF52             T : *undef*
 238: .LASF53             T : *undef*
 239: .LASF54             T : *undef*
 240: .LASF55             T : *undef*
 241: .LASF58             T : *undef*
 242: .LASF56             T : *undef*
 243: .LASF57             T : *undef*
 244: .LASF72             T : *undef*
 245: .LASF73             T : *undef*
 246: .Ldebug_ranges0     U : *undef*
 247: .LASF59             T : *undef*
 248: .LASF74             T : *undef*
 249: .LASF60             T : *undef*
 250: .LASF61             T : *undef*
 251: .LASF62             T : *undef*
 252: .LASF63             T : *undef*
 253: .LASF64             T : *undef*
 254: .LASF65             T : *undef*
 255: .LASF66             T : *undef*
 256: .LASF67             T : *undef*
 257: .debug_abbrev       T : *undef*
 258: .debug_aranges      T : *undef*
 259: .debug_ranges       T : *undef*
 260: .debug_line         T : *undef*
 261: .debug_str          T : *undef*

